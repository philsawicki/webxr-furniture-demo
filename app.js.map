{"version":3,"file":"app.js","sources":["../src/three-plugins/GLTFLoader.js","../src/utils.ts","../src/reticle.ts","../src/settings.ts","../src/text-utils.ts","../src/application.ts","../src/main.ts"],"sourcesContent":["/**\r\n * @author Rich Tibbett / https://github.com/richtr\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Tony Parisi / http://www.tonyparisi.com/\r\n * @author Takahiro / https://github.com/takahirox\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\r\n\r\nexport const GLTFLoader = ( function () {\r\n\r\n    function GLTFLoader( manager ) {\r\n\r\n        this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n        this.dracoLoader = null;\r\n\r\n    }\r\n\r\n    GLTFLoader.prototype = {\r\n\r\n        constructor: GLTFLoader,\r\n\r\n        crossOrigin: 'anonymous',\r\n\r\n        load: function ( url, onLoad, onProgress, onError ) {\r\n\r\n            var scope = this;\r\n\r\n            var path = this.path !== undefined ? this.path : THREE.LoaderUtils.extractUrlBase( url );\r\n\r\n            // Tells the LoadingManager to track an extra item, which resolves after\r\n            // the model is fully loaded. This means the count of items loaded will\r\n            // be incorrect, but ensures manager.onLoad() does not fire early.\r\n            scope.manager.itemStart( url );\r\n\r\n            var _onError = function ( e ) {\r\n\r\n                if ( onError ) {\r\n\r\n                    onError( e );\r\n\r\n                } else {\r\n\r\n                    console.error( e );\r\n\r\n                }\r\n\r\n                scope.manager.itemEnd( url );\r\n                scope.manager.itemError( url );\r\n\r\n            };\r\n\r\n            var loader = new THREE.FileLoader( scope.manager );\r\n\r\n            loader.setResponseType( 'arraybuffer' );\r\n\r\n            loader.load( url, function ( data ) {\r\n\r\n                try {\r\n\r\n                    scope.parse( data, path, function ( gltf ) {\r\n\r\n                        onLoad( gltf );\r\n\r\n                        scope.manager.itemEnd( url );\r\n\r\n                    }, _onError );\r\n\r\n                } catch ( e ) {\r\n\r\n                    _onError( e );\r\n\r\n                }\r\n\r\n            }, onProgress, _onError );\r\n\r\n        },\r\n\r\n        setCrossOrigin: function ( value ) {\r\n\r\n            this.crossOrigin = value;\r\n            return this;\r\n\r\n        },\r\n\r\n        setPath: function ( value ) {\r\n\r\n            this.path = value;\r\n            return this;\r\n\r\n        },\r\n\r\n        setDRACOLoader: function ( dracoLoader ) {\r\n\r\n            this.dracoLoader = dracoLoader;\r\n            return this;\r\n\r\n        },\r\n\r\n        parse: function ( data, path, onLoad, onError ) {\r\n\r\n            var content;\r\n            var extensions = {};\r\n\r\n            if ( typeof data === 'string' ) {\r\n\r\n                content = data;\r\n\r\n            } else {\r\n\r\n                var magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\r\n\r\n                if ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n                    try {\r\n\r\n                        extensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\r\n\r\n                    } catch ( error ) {\r\n\r\n                        if ( onError ) onError( error );\r\n                        return;\r\n\r\n                    }\r\n\r\n                    content = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\r\n\r\n                } else {\r\n\r\n                    content = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            var json = JSON.parse( content );\r\n\r\n            if ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\r\n\r\n                if ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\r\n                return;\r\n\r\n            }\r\n\r\n            if ( json.extensionsUsed ) {\r\n\r\n                for ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\r\n\r\n                    var extensionName = json.extensionsUsed[ i ];\r\n                    var extensionsRequired = json.extensionsRequired || [];\r\n\r\n                    switch ( extensionName ) {\r\n\r\n                        case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\r\n                            extensions[ extensionName ] = new GLTFLightsExtension( json );\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_MATERIALS_UNLIT:\r\n                            extensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\r\n                            extensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\r\n                            break;\r\n\r\n                        case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\r\n                            extensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\r\n                            break;\r\n\r\n                        case EXTENSIONS.MSFT_TEXTURE_DDS:\r\n                            extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\r\n                            break;\r\n\r\n                        default:\r\n\r\n                            if ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\r\n\r\n                                console.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\r\n\r\n                            }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            var parser = new GLTFParser( json, extensions, {\r\n\r\n                path: path || this.path || '',\r\n                crossOrigin: this.crossOrigin,\r\n                manager: this.manager\r\n\r\n            } );\r\n\r\n            parser.parse( function ( scene, scenes, cameras, animations, json ) {\r\n\r\n                var glTF = {\r\n                    scene: scene,\r\n                    scenes: scenes,\r\n                    cameras: cameras,\r\n                    animations: animations,\r\n                    asset: json.asset,\r\n                    parser: parser,\r\n                    userData: {}\r\n                };\r\n\r\n                addUnknownExtensionsToUserData( extensions, glTF, json );\r\n\r\n                onLoad( glTF );\r\n\r\n            }, onError );\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /* GLTFREGISTRY */\r\n\r\n    function GLTFRegistry() {\r\n\r\n        var objects = {};\r\n\r\n        return\t{\r\n\r\n            get: function ( key ) {\r\n\r\n                return objects[ key ];\r\n\r\n            },\r\n\r\n            add: function ( key, object ) {\r\n\r\n                objects[ key ] = object;\r\n\r\n            },\r\n\r\n            remove: function ( key ) {\r\n\r\n                delete objects[ key ];\r\n\r\n            },\r\n\r\n            removeAll: function () {\r\n\r\n                objects = {};\r\n\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    /*********************************/\r\n    /********** EXTENSIONS ***********/\r\n    /*********************************/\r\n\r\n    var EXTENSIONS = {\r\n        KHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n        KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\r\n        KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\r\n        KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\r\n        KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\r\n        MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\r\n    };\r\n\r\n    /**\r\n     * DDS Texture Extension\r\n     *\r\n     * Specification:\r\n     * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\r\n     *\r\n     */\r\n    function GLTFTextureDDSExtension() {\r\n\r\n        if ( ! THREE.DDSLoader ) {\r\n\r\n            throw new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\r\n\r\n        }\r\n\r\n        this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\r\n        this.ddsLoader = new THREE.DDSLoader();\r\n\r\n    }\r\n\r\n    /**\r\n     * Lights Extension\r\n     *\r\n     * Specification: PENDING\r\n     */\r\n    function GLTFLightsExtension( json ) {\r\n\r\n        this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\r\n\r\n        this.lights = [];\r\n\r\n        var extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\r\n        var lightDefs = extension.lights || [];\r\n\r\n        for ( var i = 0; i < lightDefs.length; i ++ ) {\r\n\r\n            var lightDef = lightDefs[ i ];\r\n            var lightNode;\r\n\r\n            var color = new THREE.Color( 0xffffff );\r\n            if ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\r\n\r\n            var range = lightDef.range !== undefined ? lightDef.range : 0;\r\n\r\n            switch ( lightDef.type ) {\r\n\r\n                case 'directional':\r\n                    lightNode = new THREE.DirectionalLight( color );\r\n                    lightNode.target.position.set( 0, 0, 1 );\r\n                    lightNode.add( lightNode.target );\r\n                    break;\r\n\r\n                case 'point':\r\n                    lightNode = new THREE.PointLight( color );\r\n                    lightNode.distance = range;\r\n                    break;\r\n\r\n                case 'spot':\r\n                    lightNode = new THREE.SpotLight( color );\r\n                    lightNode.distance = range;\r\n                    // Handle spotlight properties.\r\n                    lightDef.spot = lightDef.spot || {};\r\n                    lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\r\n                    lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\r\n                    lightNode.angle = lightDef.spot.outerConeAngle;\r\n                    lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\r\n                    lightNode.target.position.set( 0, 0, 1 );\r\n                    lightNode.add( lightNode.target );\r\n                    break;\r\n\r\n                default:\r\n                    throw new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\r\n\r\n            }\r\n\r\n            lightNode.decay = 2;\r\n\r\n            if ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\r\n\r\n            lightNode.name = lightDef.name || ( 'light_' + i );\r\n\r\n            this.lights.push( lightNode );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Unlit Materials Extension (pending)\r\n     *\r\n     * PR: https://github.com/KhronosGroup/glTF/pull/1163\r\n     */\r\n    function GLTFMaterialsUnlitExtension( json ) {\r\n\r\n        this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\r\n\r\n    }\r\n\r\n    GLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\r\n\r\n        return THREE.MeshBasicMaterial;\r\n\r\n    };\r\n\r\n    GLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\r\n\r\n        var pending = [];\r\n\r\n        materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n        materialParams.opacity = 1.0;\r\n\r\n        var metallicRoughness = material.pbrMetallicRoughness;\r\n\r\n        if ( metallicRoughness ) {\r\n\r\n            if ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n                var array = metallicRoughness.baseColorFactor;\r\n\r\n                materialParams.color.fromArray( array );\r\n                materialParams.opacity = array[ 3 ];\r\n\r\n            }\r\n\r\n            if ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n                pending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return Promise.all( pending );\r\n\r\n    };\r\n\r\n    /* BINARY EXTENSION */\r\n\r\n    var BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\n    var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\n    var BINARY_EXTENSION_HEADER_LENGTH = 12;\r\n    var BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\n\r\n    function GLTFBinaryExtension( data ) {\r\n\r\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n        this.content = null;\r\n        this.body = null;\r\n\r\n        var headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\r\n\r\n        this.header = {\r\n            magic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\r\n            version: headerView.getUint32( 4, true ),\r\n            length: headerView.getUint32( 8, true )\r\n        };\r\n\r\n        if ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n            throw new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\r\n\r\n        } else if ( this.header.version < 2.0 ) {\r\n\r\n            throw new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\r\n\r\n        }\r\n\r\n        var chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\r\n        var chunkIndex = 0;\r\n\r\n        while ( chunkIndex < chunkView.byteLength ) {\r\n\r\n            var chunkLength = chunkView.getUint32( chunkIndex, true );\r\n            chunkIndex += 4;\r\n\r\n            var chunkType = chunkView.getUint32( chunkIndex, true );\r\n            chunkIndex += 4;\r\n\r\n            if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\r\n\r\n                var contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\r\n                this.content = THREE.LoaderUtils.decodeText( contentArray );\r\n\r\n            } else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\r\n\r\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n                this.body = data.slice( byteOffset, byteOffset + chunkLength );\r\n\r\n            }\r\n\r\n            // Clients must ignore chunks with unknown types.\r\n\r\n            chunkIndex += chunkLength;\r\n\r\n        }\r\n\r\n        if ( this.content === null ) {\r\n\r\n            throw new Error( 'THREE.GLTFLoader: JSON content not found.' );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * DRACO Mesh Compression Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/pull/874\r\n     */\r\n    function GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\r\n\r\n        if ( ! dracoLoader ) {\r\n\r\n            throw new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\r\n\r\n        }\r\n\r\n        this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\r\n        this.json = json;\r\n        this.dracoLoader = dracoLoader;\r\n\r\n    }\r\n\r\n    GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\r\n\r\n        var json = this.json;\r\n        var dracoLoader = this.dracoLoader;\r\n        var bufferViewIndex = primitive.extensions[ this.name ].bufferView;\r\n        var gltfAttributeMap = primitive.extensions[ this.name ].attributes;\r\n        var threeAttributeMap = {};\r\n        var attributeNormalizedMap = {};\r\n        var attributeTypeMap = {};\r\n\r\n        for ( var attributeName in gltfAttributeMap ) {\r\n\r\n            if ( ! ( attributeName in ATTRIBUTES ) ) continue;\r\n\r\n            threeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\r\n\r\n        }\r\n\r\n        for ( attributeName in primitive.attributes ) {\r\n\r\n            if ( ATTRIBUTES[ attributeName ] !== undefined && gltfAttributeMap[ attributeName ] !== undefined ) {\r\n\r\n                var accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\r\n                var componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n                attributeTypeMap[ ATTRIBUTES[ attributeName ] ] = componentType;\r\n                attributeNormalizedMap[ ATTRIBUTES[ attributeName ] ] = accessorDef.normalized === true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\r\n\r\n            return new Promise( function ( resolve ) {\r\n\r\n                dracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\r\n\r\n                    for ( var attributeName in geometry.attributes ) {\r\n\r\n                        var attribute = geometry.attributes[ attributeName ];\r\n                        var normalized = attributeNormalizedMap[ attributeName ];\r\n\r\n                        if ( normalized !== undefined ) attribute.normalized = normalized;\r\n\r\n                    }\r\n\r\n                    resolve( geometry );\r\n\r\n                }, threeAttributeMap, attributeTypeMap );\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specular-Glossiness Extension\r\n     *\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\r\n     */\r\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n\r\n        return {\r\n\r\n            name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\r\n\r\n            specularGlossinessParams: [\r\n                'color',\r\n                'map',\r\n                'lightMap',\r\n                'lightMapIntensity',\r\n                'aoMap',\r\n                'aoMapIntensity',\r\n                'emissive',\r\n                'emissiveIntensity',\r\n                'emissiveMap',\r\n                'bumpMap',\r\n                'bumpScale',\r\n                'normalMap',\r\n                'displacementMap',\r\n                'displacementScale',\r\n                'displacementBias',\r\n                'specularMap',\r\n                'specular',\r\n                'glossinessMap',\r\n                'glossiness',\r\n                'alphaMap',\r\n                'envMap',\r\n                'envMapIntensity',\r\n                'refractionRatio',\r\n            ],\r\n\r\n            getMaterialType: function () {\r\n\r\n                return THREE.ShaderMaterial;\r\n\r\n            },\r\n\r\n            extendParams: function ( params, material, parser ) {\r\n\r\n                var pbrSpecularGlossiness = material.extensions[ this.name ];\r\n\r\n                var shader = THREE.ShaderLib[ 'standard' ];\r\n\r\n                var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n                var specularMapParsFragmentChunk = [\r\n                    '#ifdef USE_SPECULARMAP',\r\n                    '\tuniform sampler2D specularMap;',\r\n                    '#endif'\r\n                ].join( '\\n' );\r\n\r\n                var glossinessMapParsFragmentChunk = [\r\n                    '#ifdef USE_GLOSSINESSMAP',\r\n                    '\tuniform sampler2D glossinessMap;',\r\n                    '#endif'\r\n                ].join( '\\n' );\r\n\r\n                var specularMapFragmentChunk = [\r\n                    'vec3 specularFactor = specular;',\r\n                    '#ifdef USE_SPECULARMAP',\r\n                    '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n                    '\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n                    '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n                    '\tspecularFactor *= texelSpecular.rgb;',\r\n                    '#endif'\r\n                ].join( '\\n' );\r\n\r\n                var glossinessMapFragmentChunk = [\r\n                    'float glossinessFactor = glossiness;',\r\n                    '#ifdef USE_GLOSSINESSMAP',\r\n                    '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n                    '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n                    '\tglossinessFactor *= texelGlossiness.a;',\r\n                    '#endif'\r\n                ].join( '\\n' );\r\n\r\n                var lightPhysicalFragmentChunk = [\r\n                    'PhysicalMaterial material;',\r\n                    'material.diffuseColor = diffuseColor.rgb;',\r\n                    'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n                    'material.specularColor = specularFactor.rgb;',\r\n                ].join( '\\n' );\r\n\r\n                var fragmentShader = shader.fragmentShader\r\n                    .replace( 'uniform float roughness;', 'uniform vec3 specular;' )\r\n                    .replace( 'uniform float metalness;', 'uniform float glossiness;' )\r\n                    .replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\r\n                    .replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\r\n                    .replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\r\n                    .replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\r\n                    .replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\r\n\r\n                delete uniforms.roughness;\r\n                delete uniforms.metalness;\r\n                delete uniforms.roughnessMap;\r\n                delete uniforms.metalnessMap;\r\n\r\n                uniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\r\n                uniforms.glossiness = { value: 0.5 };\r\n                uniforms.specularMap = { value: null };\r\n                uniforms.glossinessMap = { value: null };\r\n\r\n                params.vertexShader = shader.vertexShader;\r\n                params.fragmentShader = fragmentShader;\r\n                params.uniforms = uniforms;\r\n                params.defines = { 'STANDARD': '' };\r\n\r\n                params.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n                params.opacity = 1.0;\r\n\r\n                var pending = [];\r\n\r\n                if ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\r\n\r\n                    var array = pbrSpecularGlossiness.diffuseFactor;\r\n\r\n                    params.color.fromArray( array );\r\n                    params.opacity = array[ 3 ];\r\n\r\n                }\r\n\r\n                if ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\r\n\r\n                    pending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture.index ) );\r\n\r\n                }\r\n\r\n                params.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\r\n                params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n                params.specular = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\r\n                if ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\r\n\r\n                    params.specular.fromArray( pbrSpecularGlossiness.specularFactor );\r\n\r\n                }\r\n\r\n                if ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\r\n\r\n                    var specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\r\n                    pending.push( parser.assignTexture( params, 'glossinessMap', specGlossIndex ) );\r\n                    pending.push( parser.assignTexture( params, 'specularMap', specGlossIndex ) );\r\n\r\n                }\r\n\r\n                return Promise.all( pending );\r\n\r\n            },\r\n\r\n            createMaterial: function ( params ) {\r\n\r\n                // setup material properties based on MeshStandardMaterial for Specular-Glossiness\r\n\r\n                var material = new THREE.ShaderMaterial( {\r\n                    defines: params.defines,\r\n                    vertexShader: params.vertexShader,\r\n                    fragmentShader: params.fragmentShader,\r\n                    uniforms: params.uniforms,\r\n                    fog: true,\r\n                    lights: true,\r\n                    opacity: params.opacity,\r\n                    transparent: params.transparent\r\n                } );\r\n\r\n                material.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n                material.color = params.color;\r\n\r\n                material.map = params.map === undefined ? null : params.map;\r\n\r\n                material.lightMap = null;\r\n                material.lightMapIntensity = 1.0;\r\n\r\n                material.aoMap = params.aoMap === undefined ? null : params.aoMap;\r\n                material.aoMapIntensity = 1.0;\r\n\r\n                material.emissive = params.emissive;\r\n                material.emissiveIntensity = 1.0;\r\n                material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\r\n\r\n                material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\r\n                material.bumpScale = 1;\r\n\r\n                material.normalMap = params.normalMap === undefined ? null : params.normalMap;\r\n                if ( params.normalScale ) material.normalScale = params.normalScale;\r\n\r\n                material.displacementMap = null;\r\n                material.displacementScale = 1;\r\n                material.displacementBias = 0;\r\n\r\n                material.specularMap = params.specularMap === undefined ? null : params.specularMap;\r\n                material.specular = params.specular;\r\n\r\n                material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\r\n                material.glossiness = params.glossiness;\r\n\r\n                material.alphaMap = null;\r\n\r\n                material.envMap = params.envMap === undefined ? null : params.envMap;\r\n                material.envMapIntensity = 1.0;\r\n\r\n                material.refractionRatio = 0.98;\r\n\r\n                material.extensions.derivatives = true;\r\n\r\n                return material;\r\n\r\n            },\r\n\r\n            /**\r\n             * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n             * copy only properties it knows about or inherits, and misses many properties that would\r\n             * normally be defined by MeshStandardMaterial.\r\n             *\r\n             * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n             * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n             * AND also updating `.onBeforeRender` on the parent mesh.\r\n             *\r\n             * @param  {THREE.ShaderMaterial} source\r\n             * @return {THREE.ShaderMaterial}\r\n             */\r\n            cloneMaterial: function ( source ) {\r\n\r\n                var target = source.clone();\r\n\r\n                target.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n                var params = this.specularGlossinessParams;\r\n\r\n                for ( var i = 0, il = params.length; i < il; i ++ ) {\r\n\r\n                    target[ params[ i ] ] = source[ params[ i ] ];\r\n\r\n                }\r\n\r\n                return target;\r\n\r\n            },\r\n\r\n            // Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\r\n            refreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\r\n\r\n                if ( material.isGLTFSpecularGlossinessMaterial !== true ) {\r\n\r\n                    return;\r\n\r\n                }\r\n\r\n                var uniforms = material.uniforms;\r\n                var defines = material.defines;\r\n\r\n                uniforms.opacity.value = material.opacity;\r\n\r\n                uniforms.diffuse.value.copy( material.color );\r\n                uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n                uniforms.map.value = material.map;\r\n                uniforms.specularMap.value = material.specularMap;\r\n                uniforms.alphaMap.value = material.alphaMap;\r\n\r\n                uniforms.lightMap.value = material.lightMap;\r\n                uniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n                uniforms.aoMap.value = material.aoMap;\r\n                uniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n                // uv repeat and offset setting priorities\r\n                // 1. color map\r\n                // 2. specular map\r\n                // 3. normal map\r\n                // 4. bump map\r\n                // 5. alpha map\r\n                // 6. emissive map\r\n\r\n                var uvScaleMap;\r\n\r\n                if ( material.map ) {\r\n\r\n                    uvScaleMap = material.map;\r\n\r\n                } else if ( material.specularMap ) {\r\n\r\n                    uvScaleMap = material.specularMap;\r\n\r\n                } else if ( material.displacementMap ) {\r\n\r\n                    uvScaleMap = material.displacementMap;\r\n\r\n                } else if ( material.normalMap ) {\r\n\r\n                    uvScaleMap = material.normalMap;\r\n\r\n                } else if ( material.bumpMap ) {\r\n\r\n                    uvScaleMap = material.bumpMap;\r\n\r\n                } else if ( material.glossinessMap ) {\r\n\r\n                    uvScaleMap = material.glossinessMap;\r\n\r\n                } else if ( material.alphaMap ) {\r\n\r\n                    uvScaleMap = material.alphaMap;\r\n\r\n                } else if ( material.emissiveMap ) {\r\n\r\n                    uvScaleMap = material.emissiveMap;\r\n\r\n                }\r\n\r\n                if ( uvScaleMap !== undefined ) {\r\n\r\n                    // backwards compatibility\r\n                    if ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n                        uvScaleMap = uvScaleMap.texture;\r\n\r\n                    }\r\n\r\n                    if ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n                        uvScaleMap.updateMatrix();\r\n\r\n                    }\r\n\r\n                    uniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n                }\r\n\r\n                uniforms.envMap.value = material.envMap;\r\n                uniforms.envMapIntensity.value = material.envMapIntensity;\r\n                uniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\r\n\r\n                uniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n                uniforms.specular.value.copy( material.specular );\r\n                uniforms.glossiness.value = material.glossiness;\r\n\r\n                uniforms.glossinessMap.value = material.glossinessMap;\r\n\r\n                uniforms.emissiveMap.value = material.emissiveMap;\r\n                uniforms.bumpMap.value = material.bumpMap;\r\n                uniforms.normalMap.value = material.normalMap;\r\n\r\n                uniforms.displacementMap.value = material.displacementMap;\r\n                uniforms.displacementScale.value = material.displacementScale;\r\n                uniforms.displacementBias.value = material.displacementBias;\r\n\r\n                if ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\r\n\r\n                    defines.USE_GLOSSINESSMAP = '';\r\n                    // set USE_ROUGHNESSMAP to enable vUv\r\n                    defines.USE_ROUGHNESSMAP = '';\r\n\r\n                }\r\n\r\n                if ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\r\n\r\n                    delete defines.USE_GLOSSINESSMAP;\r\n                    delete defines.USE_ROUGHNESSMAP;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    /*********************************/\r\n    /********** INTERPOLATION ********/\r\n    /*********************************/\r\n\r\n    // Spline Interpolation\r\n    // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\r\n    function GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n        THREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n    }\r\n\r\n    GLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\r\n    GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\r\n\r\n    GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\r\n\r\n        // Copies a sample value to the result buffer. See description of glTF\r\n        // CUBICSPLINE values layout in interpolate_() function below.\r\n\r\n        var result = this.resultBuffer,\r\n            values = this.sampleValues,\r\n            valueSize = this.valueSize,\r\n            offset = index * valueSize * 3 + valueSize;\r\n\r\n        for ( var i = 0; i !== valueSize; i ++ ) {\r\n\r\n            result[ i ] = values[ offset + i ];\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    };\r\n\r\n    GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\n    GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\n    GLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\r\n\r\n        var result = this.resultBuffer;\r\n        var values = this.sampleValues;\r\n        var stride = this.valueSize;\r\n\r\n        var stride2 = stride * 2;\r\n        var stride3 = stride * 3;\r\n\r\n        var td = t1 - t0;\r\n\r\n        var p = ( t - t0 ) / td;\r\n        var pp = p * p;\r\n        var ppp = pp * p;\r\n\r\n        var offset1 = i1 * stride3;\r\n        var offset0 = offset1 - stride3;\r\n\r\n        var s0 = 2 * ppp - 3 * pp + 1;\r\n        var s1 = ppp - 2 * pp + p;\r\n        var s2 = - 2 * ppp + 3 * pp;\r\n        var s3 = ppp - pp;\r\n\r\n        // Layout of keyframe output values for CUBICSPLINE animations:\r\n        //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\r\n        for ( var i = 0; i !== stride; i ++ ) {\r\n\r\n            var p0 = values[ offset0 + i + stride ]; // splineVertex_k\r\n            var m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\r\n            var p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\r\n            var m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\r\n\r\n            result[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\r\n\r\n        }\r\n\r\n        return result;\r\n\r\n    };\r\n\r\n    /*********************************/\r\n    /********** INTERNALS ************/\r\n    /*********************************/\r\n\r\n    /* CONSTANTS */\r\n\r\n    var WEBGL_CONSTANTS = {\r\n        FLOAT: 5126,\r\n        //FLOAT_MAT2: 35674,\r\n        FLOAT_MAT3: 35675,\r\n        FLOAT_MAT4: 35676,\r\n        FLOAT_VEC2: 35664,\r\n        FLOAT_VEC3: 35665,\r\n        FLOAT_VEC4: 35666,\r\n        LINEAR: 9729,\r\n        REPEAT: 10497,\r\n        SAMPLER_2D: 35678,\r\n        POINTS: 0,\r\n        LINES: 1,\r\n        LINE_LOOP: 2,\r\n        LINE_STRIP: 3,\r\n        TRIANGLES: 4,\r\n        TRIANGLE_STRIP: 5,\r\n        TRIANGLE_FAN: 6,\r\n        UNSIGNED_BYTE: 5121,\r\n        UNSIGNED_SHORT: 5123\r\n    };\r\n\r\n    var WEBGL_TYPE = {\r\n        5126: Number,\r\n        //35674: THREE.Matrix2,\r\n        35675: THREE.Matrix3,\r\n        35676: THREE.Matrix4,\r\n        35664: THREE.Vector2,\r\n        35665: THREE.Vector3,\r\n        35666: THREE.Vector4,\r\n        35678: THREE.Texture\r\n    };\r\n\r\n    var WEBGL_COMPONENT_TYPES = {\r\n        5120: Int8Array,\r\n        5121: Uint8Array,\r\n        5122: Int16Array,\r\n        5123: Uint16Array,\r\n        5125: Uint32Array,\r\n        5126: Float32Array\r\n    };\r\n\r\n    var WEBGL_FILTERS = {\r\n        9728: THREE.NearestFilter,\r\n        9729: THREE.LinearFilter,\r\n        9984: THREE.NearestMipMapNearestFilter,\r\n        9985: THREE.LinearMipMapNearestFilter,\r\n        9986: THREE.NearestMipMapLinearFilter,\r\n        9987: THREE.LinearMipMapLinearFilter\r\n    };\r\n\r\n    var WEBGL_WRAPPINGS = {\r\n        33071: THREE.ClampToEdgeWrapping,\r\n        33648: THREE.MirroredRepeatWrapping,\r\n        10497: THREE.RepeatWrapping\r\n    };\r\n\r\n    var WEBGL_SIDES = {\r\n        1028: THREE.BackSide, // Culling front\r\n        1029: THREE.FrontSide // Culling back\r\n        //1032: THREE.NoSide   // Culling front and back, what to do?\r\n    };\r\n\r\n    var WEBGL_DEPTH_FUNCS = {\r\n        512: THREE.NeverDepth,\r\n        513: THREE.LessDepth,\r\n        514: THREE.EqualDepth,\r\n        515: THREE.LessEqualDepth,\r\n        516: THREE.GreaterEqualDepth,\r\n        517: THREE.NotEqualDepth,\r\n        518: THREE.GreaterEqualDepth,\r\n        519: THREE.AlwaysDepth\r\n    };\r\n\r\n    var WEBGL_BLEND_EQUATIONS = {\r\n        32774: THREE.AddEquation,\r\n        32778: THREE.SubtractEquation,\r\n        32779: THREE.ReverseSubtractEquation\r\n    };\r\n\r\n    var WEBGL_BLEND_FUNCS = {\r\n        0: THREE.ZeroFactor,\r\n        1: THREE.OneFactor,\r\n        768: THREE.SrcColorFactor,\r\n        769: THREE.OneMinusSrcColorFactor,\r\n        770: THREE.SrcAlphaFactor,\r\n        771: THREE.OneMinusSrcAlphaFactor,\r\n        772: THREE.DstAlphaFactor,\r\n        773: THREE.OneMinusDstAlphaFactor,\r\n        774: THREE.DstColorFactor,\r\n        775: THREE.OneMinusDstColorFactor,\r\n        776: THREE.SrcAlphaSaturateFactor\r\n        // The followings are not supported by Three.js yet\r\n        //32769: CONSTANT_COLOR,\r\n        //32770: ONE_MINUS_CONSTANT_COLOR,\r\n        //32771: CONSTANT_ALPHA,\r\n        //32772: ONE_MINUS_CONSTANT_COLOR\r\n    };\r\n\r\n    var WEBGL_TYPE_SIZES = {\r\n        'SCALAR': 1,\r\n        'VEC2': 2,\r\n        'VEC3': 3,\r\n        'VEC4': 4,\r\n        'MAT2': 4,\r\n        'MAT3': 9,\r\n        'MAT4': 16\r\n    };\r\n\r\n    var ATTRIBUTES = {\r\n        POSITION: 'position',\r\n        NORMAL: 'normal',\r\n        TEXCOORD_0: 'uv',\r\n        TEXCOORD0: 'uv', // deprecated\r\n        TEXCOORD: 'uv', // deprecated\r\n        TEXCOORD_1: 'uv2',\r\n        COLOR_0: 'color',\r\n        COLOR0: 'color', // deprecated\r\n        COLOR: 'color', // deprecated\r\n        WEIGHTS_0: 'skinWeight',\r\n        WEIGHT: 'skinWeight', // deprecated\r\n        JOINTS_0: 'skinIndex',\r\n        JOINT: 'skinIndex' // deprecated\r\n    };\r\n\r\n    var PATH_PROPERTIES = {\r\n        scale: 'scale',\r\n        translation: 'position',\r\n        rotation: 'quaternion',\r\n        weights: 'morphTargetInfluences'\r\n    };\r\n\r\n    var INTERPOLATION = {\r\n        CUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\r\n                                              // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\r\n                                              // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\r\n                                              // See KeyframeTrack.optimize() for the detail.\r\n        LINEAR: THREE.InterpolateLinear,\r\n        STEP: THREE.InterpolateDiscrete\r\n    };\r\n\r\n    var STATES_ENABLES = {\r\n        2884: 'CULL_FACE',\r\n        2929: 'DEPTH_TEST',\r\n        3042: 'BLEND',\r\n        3089: 'SCISSOR_TEST',\r\n        32823: 'POLYGON_OFFSET_FILL',\r\n        32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n    };\r\n\r\n    var ALPHA_MODES = {\r\n        OPAQUE: 'OPAQUE',\r\n        MASK: 'MASK',\r\n        BLEND: 'BLEND'\r\n    };\r\n\r\n    var MIME_TYPE_FORMATS = {\r\n        'image/png': THREE.RGBAFormat,\r\n        'image/jpeg': THREE.RGBFormat\r\n    };\r\n\r\n    /* UTILITY FUNCTIONS */\r\n\r\n    function resolveURL( url, path ) {\r\n\r\n        // Invalid URL\r\n        if ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n        // Absolute URL http://,https://,//\r\n        if ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n        // Data URI\r\n        if ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n        // Blob URL\r\n        if ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n        // Relative URL\r\n        return path + url;\r\n\r\n    }\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n     */\r\n    function createDefaultMaterial() {\r\n\r\n        return new THREE.MeshStandardMaterial( {\r\n            color: 0xFFFFFF,\r\n            emissive: 0x000000,\r\n            metalness: 1,\r\n            roughness: 1,\r\n            transparent: false,\r\n            depthTest: true,\r\n            side: THREE.FrontSide\r\n        } );\r\n\r\n    }\r\n\r\n    function addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\r\n\r\n        // Add unknown glTF extensions to an object's userData.\r\n\r\n        for ( var name in objectDef.extensions ) {\r\n\r\n            if ( knownExtensions[ name ] === undefined ) {\r\n\r\n                object.userData.gltfExtensions = object.userData.gltfExtensions || {};\r\n                object.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\r\n     * @param {GLTF.definition} def\r\n     */\r\n    function assignExtrasToUserData( object, gltfDef ) {\r\n\r\n        if ( gltfDef.extras !== undefined ) {\r\n\r\n            if ( typeof gltfDef.extras === 'object' ) {\r\n\r\n                object.userData = gltfDef.extras;\r\n\r\n            } else {\r\n\r\n                console.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n     *\r\n     * @param {THREE.BufferGeometry} geometry\r\n     * @param {Array<GLTF.Target>} targets\r\n     * @param {Array<THREE.BufferAttribute>} accessors\r\n     */\r\n    function addMorphTargets( geometry, targets, accessors ) {\r\n\r\n        var hasMorphPosition = false;\r\n        var hasMorphNormal = false;\r\n\r\n        for ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n            var target = targets[ i ];\r\n\r\n            if ( target.POSITION !== undefined ) hasMorphPosition = true;\r\n            if ( target.NORMAL !== undefined ) hasMorphNormal = true;\r\n\r\n            if ( hasMorphPosition && hasMorphNormal ) break;\r\n\r\n        }\r\n\r\n        if ( ! hasMorphPosition && ! hasMorphNormal ) return;\r\n\r\n        var morphPositions = [];\r\n        var morphNormals = [];\r\n\r\n        for ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n            var target = targets[ i ];\r\n            var attributeName = 'morphTarget' + i;\r\n\r\n            if ( hasMorphPosition ) {\r\n\r\n                // Three.js morph position is absolute value. The formula is\r\n                //   basePosition\r\n                //     + weight0 * ( morphPosition0 - basePosition )\r\n                //     + weight1 * ( morphPosition1 - basePosition )\r\n                //     ...\r\n                // while the glTF one is relative\r\n                //   basePosition\r\n                //     + weight0 * glTFmorphPosition0\r\n                //     + weight1 * glTFmorphPosition1\r\n                //     ...\r\n                // then we need to convert from relative to absolute here.\r\n\r\n                if ( target.POSITION !== undefined ) {\r\n\r\n                    // Cloning not to pollute original accessor\r\n                    var positionAttribute = cloneBufferAttribute( accessors[ target.POSITION ] );\r\n                    positionAttribute.name = attributeName;\r\n\r\n                    var position = geometry.attributes.position;\r\n\r\n                    for ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\r\n\r\n                        positionAttribute.setXYZ(\r\n                            j,\r\n                            positionAttribute.getX( j ) + position.getX( j ),\r\n                            positionAttribute.getY( j ) + position.getY( j ),\r\n                            positionAttribute.getZ( j ) + position.getZ( j )\r\n                        );\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    positionAttribute = geometry.attributes.position;\r\n\r\n                }\r\n\r\n                morphPositions.push( positionAttribute );\r\n\r\n            }\r\n\r\n            if ( hasMorphNormal ) {\r\n\r\n                // see target.POSITION's comment\r\n\r\n                var normalAttribute;\r\n\r\n                if ( target.NORMAL !== undefined ) {\r\n\r\n                    var normalAttribute = cloneBufferAttribute( accessors[ target.NORMAL ] );\r\n                    normalAttribute.name = attributeName;\r\n\r\n                    var normal = geometry.attributes.normal;\r\n\r\n                    for ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\r\n\r\n                        normalAttribute.setXYZ(\r\n                            j,\r\n                            normalAttribute.getX( j ) + normal.getX( j ),\r\n                            normalAttribute.getY( j ) + normal.getY( j ),\r\n                            normalAttribute.getZ( j ) + normal.getZ( j )\r\n                        );\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    normalAttribute = geometry.attributes.normal;\r\n\r\n                }\r\n\r\n                morphNormals.push( normalAttribute );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\r\n        if ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\r\n\r\n    }\r\n\r\n    /**\r\n     * @param {THREE.Mesh} mesh\r\n     * @param {GLTF.Mesh} meshDef\r\n     */\r\n    function updateMorphTargets( mesh, meshDef ) {\r\n\r\n        mesh.updateMorphTargets();\r\n\r\n        if ( meshDef.weights !== undefined ) {\r\n\r\n            for ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\r\n\r\n                mesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // .extras has user-defined data, so check that .extras.targetNames is an array.\r\n        if ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\r\n\r\n            var targetNames = meshDef.extras.targetNames;\r\n\r\n            if ( mesh.morphTargetInfluences.length === targetNames.length ) {\r\n\r\n                mesh.morphTargetDictionary = {};\r\n\r\n                for ( var i = 0, il = targetNames.length; i < il; i ++ ) {\r\n\r\n                    mesh.morphTargetDictionary[ targetNames[ i ] ] = i;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                console.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function isPrimitiveEqual( a, b ) {\r\n\r\n        if ( a.indices !== b.indices ) {\r\n\r\n            return false;\r\n\r\n        }\r\n\r\n        return isObjectEqual( a.attributes, b.attributes );\r\n\r\n    }\r\n\r\n    function isObjectEqual( a, b ) {\r\n\r\n        if ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\r\n\r\n        for ( let key in a ) {\r\n\r\n            if ( a[ key ] !== b[ key ] ) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function isArrayEqual( a, b ) {\r\n\r\n        if ( a.length !== b.length ) return false;\r\n\r\n        for ( let i = 0, il = a.length; i < il; i ++ ) {\r\n\r\n            if ( a[ i ] !== b[ i ] ) return false;\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    function getCachedGeometry( cache, newPrimitive ) {\r\n\r\n        for ( let i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n            let cached = cache[ i ];\r\n\r\n            if ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) return cached.promise;\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    function getCachedCombinedGeometry( cache, geometries ) {\r\n\r\n        for ( let i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n            let cached = cache[ i ];\r\n\r\n            if ( isArrayEqual( geometries, cached.baseGeometries ) ) return cached.geometry;\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    function getCachedMultiPassGeometry( cache, geometry, primitives ) {\r\n\r\n        for ( let i = 0, il = cache.length; i < il; i ++ ) {\r\n\r\n            let cached = cache[ i ];\r\n\r\n            if ( geometry === cached.baseGeometry && isArrayEqual( primitives, cached.primitives ) ) return cached.geometry;\r\n\r\n        }\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n    function cloneBufferAttribute( attribute ) {\r\n\r\n        if ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n            let count = attribute.count;\r\n            let itemSize = attribute.itemSize;\r\n            let array = attribute.array.slice( 0, count * itemSize );\r\n\r\n            for ( let i = 0; i < count; ++ i ) {\r\n\r\n                array[ i ] = attribute.getX( i );\r\n                if ( itemSize >= 2 ) array[ i + 1 ] = attribute.getY( i );\r\n                if ( itemSize >= 3 ) array[ i + 2 ] = attribute.getZ( i );\r\n                if ( itemSize >= 4 ) array[ i + 3 ] = attribute.getW( i );\r\n\r\n            }\r\n\r\n            return new THREE.BufferAttribute( array, itemSize, attribute.normalized );\r\n\r\n        }\r\n\r\n        return attribute.clone();\r\n\r\n    }\r\n\r\n    /**\r\n     * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\r\n     * Returns true if all primitives use the same attributes/morphAttributes/mode\r\n     * and also have index. Otherwise returns false.\r\n     *\r\n     * @param {Array<GLTF.Primitive>} primitives\r\n     * @return {Boolean}\r\n     */\r\n    function isMultiPassGeometry( primitives ) {\r\n\r\n        if ( primitives.length < 2 ) return false;\r\n\r\n        let primitive0 = primitives[ 0 ];\r\n        let targets0 = primitive0.targets || [];\r\n\r\n        if ( primitive0.indices === undefined ) return false;\r\n\r\n        for ( let i = 1, il = primitives.length; i < il; i ++ ) {\r\n\r\n            let primitive = primitives[ i ];\r\n\r\n            if ( primitive0.mode !== primitive.mode ) return false;\r\n            if ( primitive.indices === undefined ) return false;\r\n            if ( ! isObjectEqual( primitive0.attributes, primitive.attributes ) ) return false;\r\n\r\n            let targets = primitive.targets || [];\r\n\r\n            if ( targets0.length !== targets.length ) return false;\r\n\r\n            for ( let j = 0, jl = targets0.length; j < jl; j ++ ) {\r\n\r\n                if ( ! isObjectEqual( targets0[ j ], targets[ j ] ) ) return false;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    /* GLTF PARSER */\r\n\r\n    function GLTFParser( json, extensions, options ) {\r\n\r\n        this.json = json || {};\r\n        this.extensions = extensions || {};\r\n        this.options = options || {};\r\n\r\n        // loader object cache\r\n        this.cache = new GLTFRegistry();\r\n\r\n        // BufferGeometry caching\r\n        this.primitiveCache = [];\r\n        this.multiplePrimitivesCache = [];\r\n        this.multiPassGeometryCache = [];\r\n\r\n        this.textureLoader = new THREE.TextureLoader( this.options.manager );\r\n        this.textureLoader.setCrossOrigin( this.options.crossOrigin );\r\n\r\n        this.fileLoader = new THREE.FileLoader( this.options.manager );\r\n        this.fileLoader.setResponseType( 'arraybuffer' );\r\n\r\n    }\r\n\r\n    GLTFParser.prototype.parse = function ( onLoad, onError ) {\r\n\r\n        let json = this.json;\r\n\r\n        // Clear the loader cache\r\n        this.cache.removeAll();\r\n\r\n        // Mark the special nodes/meshes in json for efficient parse\r\n        this.markDefs();\r\n\r\n        // Fire the callback on complete\r\n        this.getMultiDependencies( [\r\n\r\n            'scene',\r\n            'animation',\r\n            'camera'\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            let scenes = dependencies.scenes || [];\r\n            let scene = scenes[ json.scene || 0 ];\r\n            let animations = dependencies.animations || [];\r\n            let cameras = dependencies.cameras || [];\r\n\r\n            onLoad( scene, scenes, cameras, animations, json );\r\n\r\n        } ).catch( onError );\r\n\r\n    };\r\n\r\n    /**\r\n     * Marks the special nodes/meshes in json for efficient parse.\r\n     */\r\n    GLTFParser.prototype.markDefs = function () {\r\n\r\n        let nodeDefs = this.json.nodes || [];\r\n        let skinDefs = this.json.skins || [];\r\n        let meshDefs = this.json.meshes || [];\r\n\r\n        let meshReferences = {};\r\n        let meshUses = {};\r\n\r\n        // Nothing in the node definition indicates whether it is a Bone or an\r\n        // Object3D. Use the skins' joint references to mark bones.\r\n        for ( let skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\r\n\r\n            let joints = skinDefs[ skinIndex ].joints;\r\n\r\n            for ( let i = 0, il = joints.length; i < il; i ++ ) {\r\n\r\n                nodeDefs[ joints[ i ] ].isBone = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n        // avoid having more than one THREE.Mesh with the same name, count\r\n        // references and rename instances below.\r\n        //\r\n        // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n        for ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\r\n\r\n            let nodeDef = nodeDefs[ nodeIndex ];\r\n\r\n            if ( nodeDef.mesh !== undefined ) {\r\n\r\n                if ( meshReferences[ nodeDef.mesh ] === undefined ) {\r\n\r\n                    meshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\r\n\r\n                }\r\n\r\n                meshReferences[ nodeDef.mesh ] ++;\r\n\r\n                // Nothing in the mesh definition indicates whether it is\r\n                // a SkinnedMesh or Mesh. Use the node's mesh reference\r\n                // to mark SkinnedMesh if node has skin.\r\n                if ( nodeDef.skin !== undefined ) {\r\n\r\n                    meshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.json.meshReferences = meshReferences;\r\n        this.json.meshUses = meshUses;\r\n\r\n    };\r\n\r\n    /**\r\n     * Requests the specified dependency asynchronously, with caching.\r\n     * @param {string} type\r\n     * @param {number} index\r\n     * @return {Promise<Object>}\r\n     */\r\n    GLTFParser.prototype.getDependency = function ( type, index ) {\r\n\r\n        let cacheKey = type + ':' + index;\r\n        let dependency = this.cache.get( cacheKey );\r\n\r\n        if ( ! dependency ) {\r\n\r\n            switch ( type ) {\r\n\r\n                case 'scene':\r\n                    dependency = this.loadScene( index );\r\n                    break;\r\n\r\n                case 'node':\r\n                    dependency = this.loadNode( index );\r\n                    break;\r\n\r\n                case 'mesh':\r\n                    dependency = this.loadMesh( index );\r\n                    break;\r\n\r\n                case 'accessor':\r\n                    dependency = this.loadAccessor( index );\r\n                    break;\r\n\r\n                case 'bufferView':\r\n                    dependency = this.loadBufferView( index );\r\n                    break;\r\n\r\n                case 'buffer':\r\n                    dependency = this.loadBuffer( index );\r\n                    break;\r\n\r\n                case 'material':\r\n                    dependency = this.loadMaterial( index );\r\n                    break;\r\n\r\n                case 'texture':\r\n                    dependency = this.loadTexture( index );\r\n                    break;\r\n\r\n                case 'skin':\r\n                    dependency = this.loadSkin( index );\r\n                    break;\r\n\r\n                case 'animation':\r\n                    dependency = this.loadAnimation( index );\r\n                    break;\r\n\r\n                case 'camera':\r\n                    dependency = this.loadCamera( index );\r\n                    break;\r\n\r\n                default:\r\n                    throw new Error( 'Unknown type: ' + type );\r\n\r\n            }\r\n\r\n            this.cache.add( cacheKey, dependency );\r\n\r\n        }\r\n\r\n        return dependency;\r\n\r\n    };\r\n\r\n    /**\r\n     * Requests all dependencies of the specified type asynchronously, with caching.\r\n     * @param {string} type\r\n     * @return {Promise<Array<Object>>}\r\n     */\r\n    GLTFParser.prototype.getDependencies = function ( type ) {\r\n\r\n        let dependencies = this.cache.get( type );\r\n\r\n        if ( ! dependencies ) {\r\n\r\n            let parser = this;\r\n            let defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\r\n\r\n            dependencies = Promise.all( defs.map( function ( def, index ) {\r\n\r\n                return parser.getDependency( type, index );\r\n\r\n            } ) );\r\n\r\n            this.cache.add( type, dependencies );\r\n\r\n        }\r\n\r\n        return dependencies;\r\n\r\n    };\r\n\r\n    /**\r\n     * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n     * @param {Array<string>} types\r\n     * @return {Promise<Object<Array<Object>>>}\r\n     */\r\n    GLTFParser.prototype.getMultiDependencies = function ( types ) {\r\n\r\n        let results = {};\r\n        let pendings = [];\r\n\r\n        for ( let i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n            let type = types[ i ];\r\n            let value = this.getDependencies( type );\r\n\r\n            value = value.then( function ( key, value ) {\r\n\r\n                results[ key ] = value;\r\n\r\n            }.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\r\n\r\n            pendings.push( value );\r\n\r\n        }\r\n\r\n        return Promise.all( pendings ).then( function () {\r\n\r\n            return results;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n     * @param {number} bufferIndex\r\n     * @return {Promise<ArrayBuffer>}\r\n     */\r\n    GLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\r\n\r\n        let bufferDef = this.json.buffers[ bufferIndex ];\r\n        let loader = this.fileLoader;\r\n\r\n        if ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\r\n\r\n            throw new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\r\n\r\n        }\r\n\r\n        // If present, GLB container is required to be the first buffer.\r\n        if ( bufferDef.uri === undefined && bufferIndex === 0 ) {\r\n\r\n            return Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\r\n\r\n        }\r\n\r\n        let options = this.options;\r\n\r\n        return new Promise( function ( resolve, reject ) {\r\n\r\n            loader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\r\n\r\n                reject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n     * @param {number} bufferViewIndex\r\n     * @return {Promise<ArrayBuffer>}\r\n     */\r\n    GLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\r\n\r\n        let bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\r\n\r\n        return this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\r\n\r\n            let byteLength = bufferViewDef.byteLength || 0;\r\n            let byteOffset = bufferViewDef.byteOffset || 0;\r\n            return buffer.slice( byteOffset, byteOffset + byteLength );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n     * @param {number} accessorIndex\r\n     * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\r\n     */\r\n    GLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\r\n\r\n        let parser = this;\r\n        let json = this.json;\r\n\r\n        let accessorDef = this.json.accessors[ accessorIndex ];\r\n\r\n        if ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\r\n\r\n            // Ignore empty accessors, which may be used to declare runtime\r\n            // information about attributes coming from another source (e.g. Draco\r\n            // compression extension).\r\n            return null;\r\n\r\n        }\r\n\r\n        let pendingBufferViews = [];\r\n\r\n        if ( accessorDef.bufferView !== undefined ) {\r\n\r\n            pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\r\n\r\n        } else {\r\n\r\n            pendingBufferViews.push( null );\r\n\r\n        }\r\n\r\n        if ( accessorDef.sparse !== undefined ) {\r\n\r\n            pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\r\n            pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\r\n\r\n        }\r\n\r\n        return Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\r\n\r\n            let bufferView = bufferViews[ 0 ];\r\n\r\n            let itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\r\n            let TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n            // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n            let elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n            let itemBytes = elementBytes * itemSize;\r\n            let byteOffset = accessorDef.byteOffset || 0;\r\n            let byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\r\n            let normalized = accessorDef.normalized === true;\r\n            let array, bufferAttribute;\r\n\r\n            // The buffer is not interleaved if the stride is the item size in bytes.\r\n            if ( byteStride && byteStride !== itemBytes ) {\r\n\r\n                let ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\r\n                let ib = parser.cache.get( ibCacheKey );\r\n\r\n                if ( ! ib ) {\r\n\r\n                    // Use the full buffer if it's interleaved.\r\n                    array = new TypedArray( bufferView );\r\n\r\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\r\n                    ib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\r\n\r\n                    parser.cache.add( ibCacheKey, ib );\r\n\r\n                }\r\n\r\n                bufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\r\n\r\n            } else {\r\n\r\n                if ( bufferView === null ) {\r\n\r\n                    array = new TypedArray( accessorDef.count * itemSize );\r\n\r\n                } else {\r\n\r\n                    array = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\r\n\r\n                }\r\n\r\n                bufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\r\n\r\n            }\r\n\r\n            // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n            if ( accessorDef.sparse !== undefined ) {\r\n\r\n                let itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n                let TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\r\n\r\n                let byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n                let byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n                let sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\r\n                let sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\r\n\r\n                if ( bufferView !== null ) {\r\n\r\n                    // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n                    bufferAttribute.setArray( bufferAttribute.array.slice() );\r\n\r\n                }\r\n\r\n                for ( let i = 0, il = sparseIndices.length; i < il; i ++ ) {\r\n\r\n                    let index = sparseIndices[ i ];\r\n\r\n                    bufferAttribute.setX( index, sparseValues[ i * itemSize ] );\r\n                    if ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\r\n                    if ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\r\n                    if ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\r\n                    if ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return bufferAttribute;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n     * @param {number} textureIndex\r\n     * @return {Promise<THREE.Texture>}\r\n     */\r\n    GLTFParser.prototype.loadTexture = function ( textureIndex ) {\r\n\r\n        let parser = this;\r\n        let json = this.json;\r\n        let options = this.options;\r\n        let textureLoader = this.textureLoader;\r\n\r\n        let URL = window.URL || window.webkitURL;\r\n\r\n        let textureDef = json.textures[ textureIndex ];\r\n\r\n        let textureExtensions = textureDef.extensions || {};\r\n\r\n        let source;\r\n\r\n        if ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\r\n\r\n            source = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\r\n\r\n        } else {\r\n\r\n            source = json.images[ textureDef.source ];\r\n\r\n        }\r\n\r\n        let sourceURI = source.uri;\r\n        let isObjectURL = false;\r\n\r\n        if ( source.bufferView !== undefined ) {\r\n\r\n            // Load binary image data from bufferView, if provided.\r\n\r\n            sourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\r\n\r\n                isObjectURL = true;\r\n                let blob = new Blob( [ bufferView ], { type: source.mimeType } );\r\n                sourceURI = URL.createObjectURL( blob );\r\n                return sourceURI;\r\n\r\n            } );\r\n\r\n        }\r\n\r\n        return Promise.resolve( sourceURI ).then( function ( sourceURI ) {\r\n\r\n            // Load Texture resource.\r\n\r\n            let loader = THREE.Loader.Handlers.get( sourceURI );\r\n\r\n            if ( ! loader ) {\r\n\r\n                loader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\r\n                    ? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\r\n                    : textureLoader;\r\n\r\n            }\r\n\r\n            return new Promise( function ( resolve, reject ) {\r\n\r\n                loader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\r\n\r\n            } );\r\n\r\n        } ).then( function ( texture ) {\r\n\r\n            // Clean up resources and configure Texture.\r\n\r\n            if ( isObjectURL === true ) {\r\n\r\n                URL.revokeObjectURL( sourceURI );\r\n\r\n            }\r\n\r\n            texture.flipY = false;\r\n\r\n            if ( textureDef.name !== undefined ) texture.name = textureDef.name;\r\n\r\n            // Ignore unknown mime types, like DDS files.\r\n            if ( source.mimeType in MIME_TYPE_FORMATS ) {\r\n\r\n                texture.format = MIME_TYPE_FORMATS[ source.mimeType ];\r\n\r\n            }\r\n\r\n            let samplers = json.samplers || {};\r\n            let sampler = samplers[ textureDef.sampler ] || {};\r\n\r\n            texture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\r\n            texture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\r\n            texture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\r\n            texture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\r\n\r\n            return texture;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Asynchronously assigns a texture to the given material parameters.\r\n     * @param {Object} materialParams\r\n     * @param {string} textureName\r\n     * @param {number} textureIndex\r\n     * @return {Promise}\r\n     */\r\n    GLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {\r\n\r\n        return this.getDependency( 'texture', textureIndex ).then( function ( texture ) {\r\n\r\n            materialParams[ textureName ] = texture;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n     * @param {number} materialIndex\r\n     * @return {Promise<THREE.Material>}\r\n     */\r\n    GLTFParser.prototype.loadMaterial = function ( materialIndex ) {\r\n\r\n        let parser = this;\r\n        let json = this.json;\r\n        let extensions = this.extensions;\r\n        let materialDef = json.materials[ materialIndex ];\r\n\r\n        let materialType;\r\n        let materialParams = {};\r\n        let materialExtensions = materialDef.extensions || {};\r\n\r\n        let pending = [];\r\n\r\n        if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\r\n\r\n            let sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n            materialType = sgExtension.getMaterialType( materialDef );\r\n            pending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n        } else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\r\n\r\n            let kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\r\n            materialType = kmuExtension.getMaterialType( materialDef );\r\n            pending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n        } else {\r\n\r\n            // Specification:\r\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n            materialType = THREE.MeshStandardMaterial;\r\n\r\n            let metallicRoughness = materialDef.pbrMetallicRoughness || {};\r\n\r\n            materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n            materialParams.opacity = 1.0;\r\n\r\n            if ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n                let array = metallicRoughness.baseColorFactor;\r\n\r\n                materialParams.color.fromArray( array );\r\n                materialParams.opacity = array[ 3 ];\r\n\r\n            }\r\n\r\n            if ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n                pending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\r\n\r\n            }\r\n\r\n            materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n            materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n            if ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\r\n\r\n                let textureIndex = metallicRoughness.metallicRoughnessTexture.index;\r\n                pending.push( parser.assignTexture( materialParams, 'metalnessMap', textureIndex ) );\r\n                pending.push( parser.assignTexture( materialParams, 'roughnessMap', textureIndex ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( materialDef.doubleSided === true ) {\r\n\r\n            materialParams.side = THREE.DoubleSide;\r\n\r\n        }\r\n\r\n        let alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n        if ( alphaMode === ALPHA_MODES.BLEND ) {\r\n\r\n            materialParams.transparent = true;\r\n\r\n        } else {\r\n\r\n            materialParams.transparent = false;\r\n\r\n            if ( alphaMode === ALPHA_MODES.MASK ) {\r\n\r\n                materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n            pending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture.index ) );\r\n\r\n            materialParams.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n            if ( materialDef.normalTexture.scale !== undefined ) {\r\n\r\n                materialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n            pending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture.index ) );\r\n\r\n            if ( materialDef.occlusionTexture.strength !== undefined ) {\r\n\r\n                materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n            materialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n        }\r\n\r\n        if ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n            pending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture.index ) );\r\n\r\n        }\r\n\r\n        return Promise.all( pending ).then( function () {\r\n\r\n            let material;\r\n\r\n            if ( materialType === THREE.ShaderMaterial ) {\r\n\r\n                material = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\r\n\r\n            } else {\r\n\r\n                material = new materialType( materialParams );\r\n\r\n            }\r\n\r\n            if ( materialDef.name !== undefined ) material.name = materialDef.name;\r\n\r\n            // Normal map textures use OpenGL conventions:\r\n            // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\r\n            if ( material.normalScale ) {\r\n\r\n                material.normalScale.y = - material.normalScale.y;\r\n\r\n            }\r\n\r\n            // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\r\n            if ( material.map ) material.map.encoding = THREE.sRGBEncoding;\r\n            if ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\r\n            if ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\r\n\r\n            assignExtrasToUserData( material, materialDef );\r\n\r\n            if ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\r\n\r\n            return material;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * @param  {THREE.BufferGeometry} geometry\r\n     * @param  {GLTF.Primitive} primitiveDef\r\n     * @param  {Array<THREE.BufferAttribute>} accessors\r\n     */\r\n    function addPrimitiveAttributes( geometry, primitiveDef, accessors ) {\r\n\r\n        let attributes = primitiveDef.attributes;\r\n\r\n        for ( let gltfAttributeName in attributes ) {\r\n\r\n            let threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\r\n            let bufferAttribute = accessors[ attributes[ gltfAttributeName ] ];\r\n\r\n            // Skip attributes already provided by e.g. Draco extension.\r\n            if ( ! threeAttributeName ) continue;\r\n            if ( threeAttributeName in geometry.attributes ) continue;\r\n\r\n            geometry.addAttribute( threeAttributeName, bufferAttribute );\r\n\r\n        }\r\n\r\n        if ( primitiveDef.indices !== undefined && ! geometry.index ) {\r\n\r\n            geometry.setIndex( accessors[ primitiveDef.indices ] );\r\n\r\n        }\r\n\r\n        if ( primitiveDef.targets !== undefined ) {\r\n\r\n            addMorphTargets( geometry, primitiveDef.targets, accessors );\r\n\r\n        }\r\n\r\n        assignExtrasToUserData( geometry, primitiveDef );\r\n\r\n    }\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n     *\r\n     * Creates BufferGeometries from primitives.\r\n     * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\r\n     * Otherwise, returns BufferGeometries without .groups as many as primitives.\r\n     *\r\n     * @param {Array<Object>} primitives\r\n     * @return {Promise<Array<THREE.BufferGeometry>>}\r\n     */\r\n    GLTFParser.prototype.loadGeometries = function ( primitives ) {\r\n\r\n        let parser = this;\r\n        let extensions = this.extensions;\r\n        let cache = this.primitiveCache;\r\n\r\n        let isMultiPass = isMultiPassGeometry( primitives );\r\n        let originalPrimitives;\r\n\r\n        if ( isMultiPass ) {\r\n\r\n            originalPrimitives = primitives; // save original primitives and use later\r\n\r\n            // We build a single BufferGeometry with .groups from multiple primitives\r\n            // because all primitives share the same attributes/morph/mode and have indices.\r\n\r\n            primitives = [ primitives[ 0 ] ];\r\n\r\n            // Sets .groups and combined indices to a geometry later in this method.\r\n\r\n        }\r\n\r\n        return this.getDependencies( 'accessor' ).then( function ( accessors ) {\r\n\r\n            let pending = [];\r\n\r\n            for ( let i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n                let primitive = primitives[ i ];\r\n\r\n                // See if we've already created this geometry\r\n                let cached = getCachedGeometry( cache, primitive );\r\n\r\n                if ( cached ) {\r\n\r\n                    // Use the cached geometry if it exists\r\n                    pending.push( cached );\r\n\r\n                } else if ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\r\n\r\n                    // Use DRACO geometry if available\r\n                    let geometryPromise = extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\r\n                        .decodePrimitive( primitive, parser )\r\n                        .then( function ( geometry ) {\r\n\r\n                            addPrimitiveAttributes( geometry, primitive, accessors );\r\n\r\n                            return geometry;\r\n\r\n                        } );\r\n\r\n                    cache.push( { primitive: primitive, promise: geometryPromise } );\r\n\r\n                    pending.push( geometryPromise );\r\n\r\n                } else {\r\n\r\n                    // Otherwise create a new geometry\r\n                    let geometry = new THREE.BufferGeometry();\r\n\r\n                    addPrimitiveAttributes( geometry, primitive, accessors );\r\n\r\n                    let geometryPromise = Promise.resolve( geometry );\r\n\r\n                    // Cache this geometry\r\n                    cache.push( { primitive: primitive, promise: geometryPromise } );\r\n\r\n                    pending.push( geometryPromise );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return Promise.all( pending ).then( function ( geometries ) {\r\n\r\n                if ( isMultiPass ) {\r\n\r\n                    let baseGeometry = geometries[ 0 ];\r\n\r\n                    // See if we've already created this combined geometry\r\n                    let cache = parser.multiPassGeometryCache;\r\n                    let cached = getCachedMultiPassGeometry( cache, baseGeometry, originalPrimitives );\r\n\r\n                    if ( cached !== null ) return [ cached.geometry ];\r\n\r\n                    // Cloning geometry because of index override.\r\n                    // Attributes can be reused so cloning by myself here.\r\n                    let geometry = new THREE.BufferGeometry();\r\n\r\n                    geometry.name = baseGeometry.name;\r\n                    geometry.userData = baseGeometry.userData;\r\n\r\n                    for ( let key in baseGeometry.attributes ) geometry.addAttribute( key, baseGeometry.attributes[ key ] );\r\n                    for ( let key in baseGeometry.morphAttributes ) geometry.morphAttributes[ key ] = baseGeometry.morphAttributes[ key ];\r\n\r\n                    let indices = [];\r\n                    let offset = 0;\r\n\r\n                    for ( let i = 0, il = originalPrimitives.length; i < il; i ++ ) {\r\n\r\n                        let accessor = accessors[ originalPrimitives[ i ].indices ];\r\n\r\n                        for ( let j = 0, jl = accessor.count; j < jl; j ++ ) indices.push( accessor.array[ j ] );\r\n\r\n                        geometry.addGroup( offset, accessor.count, i );\r\n\r\n                        offset += accessor.count;\r\n\r\n                    }\r\n\r\n                    geometry.setIndex( indices );\r\n\r\n                    cache.push( { geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives } );\r\n\r\n                    return [ geometry ];\r\n\r\n                } else if ( geometries.length > 1 && THREE.BufferGeometryUtils !== undefined ) {\r\n\r\n                    // Tries to merge geometries with BufferGeometryUtils if possible\r\n\r\n                    for ( let i = 1, il = primitives.length; i < il; i ++ ) {\r\n\r\n                        // can't merge if draw mode is different\r\n                        if ( primitives[ 0 ].mode !== primitives[ i ].mode ) return geometries;\r\n\r\n                    }\r\n\r\n                    // See if we've already created this combined geometry\r\n                    let cache = parser.multiplePrimitivesCache;\r\n                    let cached = getCachedCombinedGeometry( cache, geometries );\r\n\r\n                    if ( cached ) {\r\n\r\n                        if ( cached.geometry !== null ) return [ cached.geometry ];\r\n\r\n                    } else {\r\n\r\n                        let geometry = THREE.BufferGeometryUtils.mergeBufferGeometries( geometries, true );\r\n\r\n                        cache.push( { geometry: geometry, baseGeometries: geometries } );\r\n\r\n                        if ( geometry !== null ) return [ geometry ];\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return geometries;\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n     * @param {number} meshIndex\r\n     * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\r\n     */\r\n    GLTFParser.prototype.loadMesh = function ( meshIndex ) {\r\n\r\n        let scope = this;\r\n        let json = this.json;\r\n        let extensions = this.extensions;\r\n\r\n        let meshDef = json.meshes[ meshIndex ];\r\n\r\n        return this.getMultiDependencies( [\r\n\r\n            'accessor',\r\n            'material'\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            let primitives = meshDef.primitives;\r\n            let originalMaterials = [];\r\n\r\n            for ( let i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n                originalMaterials[ i ] = primitives[ i ].material === undefined\r\n                    ? createDefaultMaterial()\r\n                    : dependencies.materials[ primitives[ i ].material ];\r\n\r\n            }\r\n\r\n            return scope.loadGeometries( primitives ).then( function ( geometries ) {\r\n\r\n                let isMultiMaterial = geometries.length === 1 && geometries[ 0 ].groups.length > 0;\r\n\r\n                let meshes = [];\r\n\r\n                for ( let i = 0, il = geometries.length; i < il; i ++ ) {\r\n\r\n                    let geometry = geometries[ i ];\r\n                    let primitive = primitives[ i ];\r\n\r\n                    // 1. create Mesh\r\n\r\n                    let mesh;\r\n\r\n                    let material = isMultiMaterial ? originalMaterials : originalMaterials[ i ];\r\n\r\n                    if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n                        primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n                        primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n                        primitive.mode === undefined ) {\r\n\r\n                        // .isSkinnedMesh isn't in glTF spec. See .markDefs()\r\n                        mesh = meshDef.isSkinnedMesh === true\r\n                            ? new THREE.SkinnedMesh( geometry, material )\r\n                            : new THREE.Mesh( geometry, material );\r\n\r\n                        if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\r\n\r\n                            mesh.drawMode = THREE.TriangleStripDrawMode;\r\n\r\n                        } else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\r\n\r\n                            mesh.drawMode = THREE.TriangleFanDrawMode;\r\n\r\n                        }\r\n\r\n                    } else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\r\n\r\n                        mesh = new THREE.LineSegments( geometry, material );\r\n\r\n                    } else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\r\n\r\n                        mesh = new THREE.Line( geometry, material );\r\n\r\n                    } else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\r\n\r\n                        mesh = new THREE.LineLoop( geometry, material );\r\n\r\n                    } else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\r\n\r\n                        mesh = new THREE.Points( geometry, material );\r\n\r\n                    } else {\r\n\r\n                        throw new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\r\n\r\n                    }\r\n\r\n                    if ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\r\n\r\n                        updateMorphTargets( mesh, meshDef );\r\n\r\n                    }\r\n\r\n                    mesh.name = meshDef.name || ( 'mesh_' + meshIndex );\r\n\r\n                    if ( geometries.length > 1 ) mesh.name += '_' + i;\r\n\r\n                    assignExtrasToUserData( mesh, meshDef );\r\n\r\n                    meshes.push( mesh );\r\n\r\n                    // 2. update Material depending on Mesh and BufferGeometry\r\n\r\n                    let materials = isMultiMaterial ? mesh.material : [ mesh.material ];\r\n\r\n                    let useVertexColors = geometry.attributes.color !== undefined;\r\n                    let useFlatShading = geometry.attributes.normal === undefined;\r\n                    let useSkinning = mesh.isSkinnedMesh === true;\r\n                    let useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\r\n                    let useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\r\n\r\n                    for ( let j = 0, jl = materials.length; j < jl; j ++ ) {\r\n\r\n                        let material = materials[ j ];\r\n\r\n                        if ( mesh.isPoints ) {\r\n\r\n                            let cacheKey = 'PointsMaterial:' + material.uuid;\r\n\r\n                            let pointsMaterial = scope.cache.get( cacheKey );\r\n\r\n                            if ( ! pointsMaterial ) {\r\n\r\n                                pointsMaterial = new THREE.PointsMaterial();\r\n                                THREE.Material.prototype.copy.call( pointsMaterial, material );\r\n                                pointsMaterial.color.copy( material.color );\r\n                                pointsMaterial.map = material.map;\r\n                                pointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\r\n\r\n                                scope.cache.add( cacheKey, pointsMaterial );\r\n\r\n                            }\r\n\r\n                            material = pointsMaterial;\r\n\r\n                        } else if ( mesh.isLine ) {\r\n\r\n                            let cacheKey = 'LineBasicMaterial:' + material.uuid;\r\n\r\n                            let lineMaterial = scope.cache.get( cacheKey );\r\n\r\n                            if ( ! lineMaterial ) {\r\n\r\n                                lineMaterial = new THREE.LineBasicMaterial();\r\n                                THREE.Material.prototype.copy.call( lineMaterial, material );\r\n                                lineMaterial.color.copy( material.color );\r\n                                lineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\r\n\r\n                                scope.cache.add( cacheKey, lineMaterial );\r\n\r\n                            }\r\n\r\n                            material = lineMaterial;\r\n\r\n                        }\r\n\r\n                        // Clone the material if it will be modified\r\n                        if ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\r\n\r\n                            let cacheKey = 'ClonedMaterial:' + material.uuid + ':';\r\n\r\n                            if ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\r\n                            if ( useSkinning ) cacheKey += 'skinning:';\r\n                            if ( useVertexColors ) cacheKey += 'vertex-colors:';\r\n                            if ( useFlatShading ) cacheKey += 'flat-shading:';\r\n                            if ( useMorphTargets ) cacheKey += 'morph-targets:';\r\n                            if ( useMorphNormals ) cacheKey += 'morph-normals:';\r\n\r\n                            let cachedMaterial = scope.cache.get( cacheKey );\r\n\r\n                            if ( ! cachedMaterial ) {\r\n\r\n                                cachedMaterial = material.isGLTFSpecularGlossinessMaterial\r\n                                    ? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\r\n                                    : material.clone();\r\n\r\n                                if ( useSkinning ) cachedMaterial.skinning = true;\r\n                                if ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\r\n                                if ( useFlatShading ) cachedMaterial.flatShading = true;\r\n                                if ( useMorphTargets ) cachedMaterial.morphTargets = true;\r\n                                if ( useMorphNormals ) cachedMaterial.morphNormals = true;\r\n\r\n                                scope.cache.add( cacheKey, cachedMaterial );\r\n\r\n                            }\r\n\r\n                            material = cachedMaterial;\r\n\r\n                        }\r\n\r\n                        materials[ j ] = material;\r\n\r\n                        // workarounds for mesh and geometry\r\n\r\n                        if ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\r\n\r\n                            console.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\r\n                            geometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\r\n\r\n                        }\r\n\r\n                        if ( material.isGLTFSpecularGlossinessMaterial ) {\r\n\r\n                            // for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\r\n                            mesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    mesh.material = isMultiMaterial ? materials : materials[ 0 ];\r\n\r\n                }\r\n\r\n                if ( meshes.length === 1 ) {\r\n\r\n                    return meshes[ 0 ];\r\n\r\n                }\r\n\r\n                let group = new THREE.Group();\r\n\r\n                for ( let i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n                    group.add( meshes[ i ] );\r\n\r\n                }\r\n\r\n                return group;\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n     * @param {number} cameraIndex\r\n     * @return {Promise<THREE.Camera>}\r\n     */\r\n    GLTFParser.prototype.loadCamera = function ( cameraIndex ) {\r\n\r\n        let camera;\r\n        let cameraDef = this.json.cameras[ cameraIndex ];\r\n        let params = cameraDef[ cameraDef.type ];\r\n\r\n        if ( ! params ) {\r\n\r\n            console.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\r\n            return;\r\n\r\n        }\r\n\r\n        if ( cameraDef.type === 'perspective' ) {\r\n\r\n            camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\r\n\r\n        } else if ( cameraDef.type === 'orthographic' ) {\r\n\r\n            camera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\r\n\r\n        }\r\n\r\n        if ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\r\n\r\n        assignExtrasToUserData( camera, cameraDef );\r\n\r\n        return Promise.resolve( camera );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n     * @param {number} skinIndex\r\n     * @return {Promise<Object>}\r\n     */\r\n    GLTFParser.prototype.loadSkin = function ( skinIndex ) {\r\n\r\n        let skinDef = this.json.skins[ skinIndex ];\r\n\r\n        let skinEntry = { joints: skinDef.joints };\r\n\r\n        if ( skinDef.inverseBindMatrices === undefined ) {\r\n\r\n            return Promise.resolve( skinEntry );\r\n\r\n        }\r\n\r\n        return this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\r\n\r\n            skinEntry.inverseBindMatrices = accessor;\r\n\r\n            return skinEntry;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n     * @param {number} animationIndex\r\n     * @return {Promise<THREE.AnimationClip>}\r\n     */\r\n    GLTFParser.prototype.loadAnimation = function ( animationIndex ) {\r\n\r\n        let json = this.json;\r\n\r\n        let animationDef = json.animations[ animationIndex ];\r\n\r\n        return this.getMultiDependencies( [\r\n\r\n            'accessor',\r\n            'node'\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            let tracks = [];\r\n\r\n            for ( let i = 0, il = animationDef.channels.length; i < il; i ++ ) {\r\n\r\n                let channel = animationDef.channels[ i ];\r\n                let sampler = animationDef.samplers[ channel.sampler ];\r\n\r\n                if ( sampler ) {\r\n\r\n                    let target = channel.target;\r\n                    let name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n                    let input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\r\n                    let output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\r\n\r\n                    let inputAccessor = dependencies.accessors[ input ];\r\n                    let outputAccessor = dependencies.accessors[ output ];\r\n\r\n                    let node = dependencies.nodes[ name ];\r\n\r\n                    if ( node ) {\r\n\r\n                        node.updateMatrix();\r\n                        node.matrixAutoUpdate = true;\r\n\r\n                        let TypedKeyframeTrack;\r\n\r\n                        switch ( PATH_PROPERTIES[ target.path ] ) {\r\n\r\n                            case PATH_PROPERTIES.weights:\r\n\r\n                                TypedKeyframeTrack = THREE.NumberKeyframeTrack;\r\n                                break;\r\n\r\n                            case PATH_PROPERTIES.rotation:\r\n\r\n                                TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\r\n                                break;\r\n\r\n                            case PATH_PROPERTIES.position:\r\n                            case PATH_PROPERTIES.scale:\r\n                            default:\r\n\r\n                                TypedKeyframeTrack = THREE.VectorKeyframeTrack;\r\n                                break;\r\n\r\n                        }\r\n\r\n                        let targetName = node.name ? node.name : node.uuid;\r\n\r\n                        let interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\r\n\r\n                        let targetNames = [];\r\n\r\n                        if ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\r\n\r\n                            // node can be THREE.Group here but\r\n                            // PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n                            // the property of a mesh object under group.\r\n\r\n                            node.traverse( function ( object ) {\r\n\r\n                                if ( object.isMesh === true && object.morphTargetInfluences ) {\r\n\r\n                                    targetNames.push( object.name ? object.name : object.uuid );\r\n\r\n                                }\r\n\r\n                            } );\r\n\r\n                        } else {\r\n\r\n                            targetNames.push( targetName );\r\n\r\n                        }\r\n\r\n                        // KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n                        // buffers before creating a truncated copy to keep. Because buffers may\r\n                        // be reused by other tracks, make copies here.\r\n                        for ( let j = 0, jl = targetNames.length; j < jl; j ++ ) {\r\n\r\n                            let track = new TypedKeyframeTrack(\r\n                                targetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\r\n                                THREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\r\n                                THREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\r\n                                interpolation\r\n                            );\r\n\r\n                            // Here is the trick to enable custom interpolation.\r\n                            // Overrides .createInterpolant in a factory method which creates custom interpolation.\r\n                            if ( sampler.interpolation === 'CUBICSPLINE' ) {\r\n\r\n                                track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\r\n\r\n                                    // A CUBICSPLINE keyframe in glTF has three output values for each input value,\r\n                                    // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\r\n                                    // must be divided by three to get the interpolant's sampleSize argument.\r\n\r\n                                    return new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\r\n\r\n                                };\r\n\r\n                                // Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\r\n                                // track.getInterpolation() doesn't return valid value for custom interpolant.\r\n                                track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\r\n\r\n                            }\r\n\r\n                            tracks.push( track );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            let name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n            return new THREE.AnimationClip( name, undefined, tracks );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n     * @param {number} nodeIndex\r\n     * @return {Promise<THREE.Object3D>}\r\n     */\r\n    GLTFParser.prototype.loadNode = function ( nodeIndex ) {\r\n\r\n        let json = this.json;\r\n        let extensions = this.extensions;\r\n\r\n        let meshReferences = json.meshReferences;\r\n        let meshUses = json.meshUses;\r\n\r\n        let nodeDef = json.nodes[ nodeIndex ];\r\n\r\n        return this.getMultiDependencies( [\r\n\r\n            'mesh',\r\n            'skin',\r\n            'camera',\r\n            'light'\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            let node;\r\n\r\n            // .isBone isn't in glTF spec. See .markDefs\r\n            if ( nodeDef.isBone === true ) {\r\n\r\n                node = new THREE.Bone();\r\n\r\n            } else if ( nodeDef.mesh !== undefined ) {\r\n\r\n                let mesh = dependencies.meshes[ nodeDef.mesh ];\r\n\r\n                if ( meshReferences[ nodeDef.mesh ] > 1 ) {\r\n\r\n                    let instanceNum = meshUses[ nodeDef.mesh ] ++;\r\n\r\n                    node = mesh.clone();\r\n                    node.name += '_instance_' + instanceNum;\r\n\r\n                    // onBeforeRender copy for Specular-Glossiness\r\n                    node.onBeforeRender = mesh.onBeforeRender;\r\n\r\n                    for ( let i = 0, il = node.children.length; i < il; i ++ ) {\r\n\r\n                        node.children[ i ].name += '_instance_' + instanceNum;\r\n                        node.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    node = mesh;\r\n\r\n                }\r\n\r\n            } else if ( nodeDef.camera !== undefined ) {\r\n\r\n                node = dependencies.cameras[ nodeDef.camera ];\r\n\r\n            } else if ( nodeDef.extensions\r\n                     && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\r\n                     && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\r\n\r\n                let lights = extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].lights;\r\n                node = lights[ nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ];\r\n\r\n            } else {\r\n\r\n                node = new THREE.Object3D();\r\n\r\n            }\r\n\r\n            if ( nodeDef.name !== undefined ) {\r\n\r\n                node.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\r\n\r\n            }\r\n\r\n            assignExtrasToUserData( node, nodeDef );\r\n\r\n            if ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\r\n\r\n            if ( nodeDef.matrix !== undefined ) {\r\n\r\n                let matrix = new THREE.Matrix4();\r\n                matrix.fromArray( nodeDef.matrix );\r\n                node.applyMatrix( matrix );\r\n\r\n            } else {\r\n\r\n                if ( nodeDef.translation !== undefined ) {\r\n\r\n                    node.position.fromArray( nodeDef.translation );\r\n\r\n                }\r\n\r\n                if ( nodeDef.rotation !== undefined ) {\r\n\r\n                    node.quaternion.fromArray( nodeDef.rotation );\r\n\r\n                }\r\n\r\n                if ( nodeDef.scale !== undefined ) {\r\n\r\n                    node.scale.fromArray( nodeDef.scale );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return node;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    /**\r\n     * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n     * @param {number} sceneIndex\r\n     * @return {Promise<THREE.Scene>}\r\n     */\r\n    GLTFParser.prototype.loadScene = function () {\r\n\r\n        // scene node hierachy builder\r\n\r\n        function buildNodeHierachy( nodeId, parentObject, json, allNodes, skins ) {\r\n\r\n            let node = allNodes[ nodeId ];\r\n            let nodeDef = json.nodes[ nodeId ];\r\n\r\n            // build skeleton here as well\r\n\r\n            if ( nodeDef.skin !== undefined ) {\r\n\r\n                let meshes = node.isGroup === true ? node.children : [ node ];\r\n\r\n                for ( let i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n                    let mesh = meshes[ i ];\r\n                    let skinEntry = skins[ nodeDef.skin ];\r\n\r\n                    let bones = [];\r\n                    let boneInverses = [];\r\n\r\n                    for ( let j = 0, jl = skinEntry.joints.length; j < jl; j ++ ) {\r\n\r\n                        let jointId = skinEntry.joints[ j ];\r\n                        let jointNode = allNodes[ jointId ];\r\n\r\n                        if ( jointNode ) {\r\n\r\n                            bones.push( jointNode );\r\n\r\n                            let mat = new THREE.Matrix4();\r\n\r\n                            if ( skinEntry.inverseBindMatrices !== undefined ) {\r\n\r\n                                mat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\r\n\r\n                            }\r\n\r\n                            boneInverses.push( mat );\r\n\r\n                        } else {\r\n\r\n                            console.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', jointId );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    mesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // build node hierachy\r\n\r\n            parentObject.add( node );\r\n\r\n            if ( nodeDef.children ) {\r\n\r\n                let children = nodeDef.children;\r\n\r\n                for ( let i = 0, il = children.length; i < il; i ++ ) {\r\n\r\n                    let child = children[ i ];\r\n                    buildNodeHierachy( child, node, json, allNodes, skins );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return function loadScene( sceneIndex ) {\r\n\r\n            let json = this.json;\r\n            let extensions = this.extensions;\r\n            let sceneDef = this.json.scenes[ sceneIndex ];\r\n\r\n            return this.getMultiDependencies( [\r\n\r\n                'node',\r\n                'skin'\r\n\r\n            ] ).then( function ( dependencies ) {\r\n\r\n                let scene = new THREE.Scene();\r\n                if ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\r\n\r\n                assignExtrasToUserData( scene, sceneDef );\r\n\r\n                if ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\r\n\r\n                let nodeIds = sceneDef.nodes || [];\r\n\r\n                for ( let i = 0, il = nodeIds.length; i < il; i ++ ) {\r\n\r\n                    buildNodeHierachy( nodeIds[ i ], scene, json, dependencies.nodes, dependencies.skins );\r\n\r\n                }\r\n\r\n                return scene;\r\n\r\n            } );\r\n\r\n        };\r\n\r\n    }();\r\n\r\n    return GLTFLoader;\r\n\r\n} )();\r\n","import * as THREE from 'three';\r\nimport Application from './application';\r\nimport { GLTFLoader } from './three-plugins/GLTFLoader';\r\n\r\n\r\n/**\r\n * Remap the opacity of the given Material from 0 to 1.\r\n *\r\n * @param mat The Material whose opacity should be remapped.\r\n */\r\nconst opacityRemap = (mat: THREE.Material) => {\r\n    if (mat.opacity === 0) {\r\n        mat.opacity = 1;\r\n    }\r\n};\r\n\r\n\r\n  /**\r\n   * Creates a THREE.Scene containing lights that case shadows, and a mesh that\r\n   * will receive shadows.\r\n   *\r\n   * @return A lit scene.\r\n   */\r\nexport function createLitScene(): THREE.Scene {\r\n    const scene = new THREE.Scene();\r\n\r\n    // The materials will render as a black mesh without lights in our scenes.\r\n    // Let's add an ambient light so our material can be visible, as well as a\r\n    // directional light for the shadow.\r\n    const light = new THREE.AmbientLight(0xffffff, 1);\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.3);\r\n    directionalLight.position.set(10, 15, 10);\r\n\r\n    // We want this light to cast shadow.\r\n    directionalLight.castShadow = true;\r\n\r\n    // Make a large plane to receive our shadows\r\n    const planeGeometry = new THREE.PlaneGeometry(2000, 2000);\r\n    // Rotate our plane to be parallel to the floor\r\n    planeGeometry.rotateX(-Math.PI / 2);\r\n\r\n    // Create a mesh with a shadow material, resulting in a mesh that only\r\n    // renders shadows once we flip the `receiveShadow` property.\r\n    const shadowMesh = new THREE.Mesh(\r\n        planeGeometry,\r\n        new THREE.ShadowMaterial({\r\n            // color: 0x111111, // /!\\\r\n            opacity: 0.2,\r\n        })\r\n    );\r\n\r\n    // Give it a name so we can reference it later, and set `receiveShadow`\r\n    // to true so that it can render our model's shadow.\r\n    shadowMesh.name = 'shadowMesh';\r\n    shadowMesh.receiveShadow = true;\r\n    shadowMesh.position.y = 10 * 1000;\r\n\r\n    // Add lights and shadow material to scene.\r\n    scene.add(shadowMesh);\r\n    scene.add(light);\r\n    scene.add(directionalLight);\r\n\r\n    return scene;\r\n}\r\n\r\n/**\r\n * Creates a THREE.Scene containing cubes all over the scene.\r\n *\r\n * @return A scene containing cubes.\r\n */\r\nexport function createCubeScene(): THREE.Scene {\r\n    const scene = new THREE.Scene();\r\n\r\n    const materials = [\r\n        new THREE.MeshBasicMaterial({ color: 0xff0000 }),\r\n        new THREE.MeshBasicMaterial({ color: 0x0000ff }),\r\n        new THREE.MeshBasicMaterial({ color: 0x00ff00 }),\r\n        new THREE.MeshBasicMaterial({ color: 0xff00ff }),\r\n        new THREE.MeshBasicMaterial({ color: 0x00ffff }),\r\n        new THREE.MeshBasicMaterial({ color: 0xffff00 })\r\n    ];\r\n\r\n    const ROW_COUNT = 4;\r\n    const SPREAD = 1;\r\n    const HALF = ROW_COUNT / 2;\r\n    for (let i = 0; i < ROW_COUNT; i++) {\r\n        for (let j = 0; j < ROW_COUNT; j++) {\r\n            for (let k = 0; k < ROW_COUNT; k++) {\r\n                const box = new THREE.Mesh(\r\n                    new THREE.BoxBufferGeometry(0.2, 0.2, 0.2),\r\n                    materials\r\n                );\r\n                box.position.set(i - HALF, j - HALF, k - HALF);\r\n                box.position.multiplyScalar(SPREAD);\r\n                scene.add(box);\r\n            }\r\n        }\r\n    }\r\n\r\n    return scene;\r\n}\r\n\r\n/**\r\n * Loads an OBJ model with an MTL material applied.\r\n *\r\n * @param objURL URL of the OBJ file.\r\n * @param mtlURL URL of the MTL file.\r\n * @return  Returns a THREE.Group object containing the mesh.\r\n */\r\nexport function loadModel(objURL: string, mtlURL: string): Promise<THREE.Group> {\r\n    // OBJLoader and MTLLoader are not a part of three.js core, and must be\r\n    // included as separate scripts.\r\n    const objLoader = new THREE.OBJLoader();\r\n    const mtlLoader = new THREE.MTLLoader();\r\n\r\n    // Set texture path so that the loader knows where to find linked resources\r\n    mtlLoader.setTexturePath(mtlURL.substr(0, mtlURL.lastIndexOf('/') + 1));\r\n\r\n    // remaps ka, kd, & ks values of 0,0,0 -> 1,1,1, models from Poly benefit\r\n    // due to how they were encoded.\r\n    mtlLoader.setMaterialOptions({ ignoreZeroRGBs: true });\r\n\r\n    // tslint:disable-next-line:no-empty\r\n    const noop = () => { };\r\n\r\n    // OBJLoader and MTLLoader provide callback interfaces; let's return a\r\n    // Promise and resolve or reject based off of the asset downloading.\r\n    return new Promise((resolve, reject) => {\r\n        mtlLoader.load(mtlURL, materialCreator => {\r\n            // We have our material package parsed from the .mtl file. Be sure\r\n            // to preload it.\r\n            materialCreator.preload();\r\n\r\n            // Remap opacity values in the material to 1 if they're set as 0;\r\n            // this is another peculiarity of Poly models and some MTL\r\n            // materials.\r\n            const materials: THREE.Material[] = Object.values(materialCreator.materials);\r\n            for (const material of materials) {\r\n                opacityRemap(material);\r\n            }\r\n\r\n            // Give our OBJ loader our materials to apply it properly to the\r\n            // model\r\n            objLoader.setMaterials(materialCreator);\r\n\r\n            // Finally load our OBJ, and resolve the promise once found.\r\n            objLoader.load(objURL, resolve, noop, reject);\r\n        }, noop, reject);\r\n    });\r\n}\r\n\r\n/**\r\n * Load a GLTF model at the given URL.\r\n *\r\n * @return A Promise to be fulfilled with the given GLTF Model.\r\n */\r\nexport function loadGLTFModel(url: string): Promise<GLTFModel> {\r\n    const gltfLoader: any = new GLTFLoader();\r\n\r\n    return new Promise(resolve => {\r\n        gltfLoader.load(url, (gltf: GLTFModel) => {\r\n            gltf.scene.traverse(node => {\r\n                if (node instanceof THREE.Mesh) {\r\n                    // node.receiveShadow = true;\r\n                    // node.castShadow = true;\r\n                    opacityRemap(node.material as THREE.Material);\r\n                }\r\n            });\r\n            resolve(gltf);\r\n        });\r\n    });\r\n}\r\n\r\n/**\r\n * Similar to THREE.Object3D's `lookAt` function, except we only want to rotate\r\n * on the Y axis. In our AR use case, we don't want our model rotating in all\r\n * axes, instead just on the Y.\r\n *\r\n * @param looker Eye position.\r\n * @param target Target position.\r\n */\r\nexport function lookAtOnY(looker: THREE.Object3D, target: THREE.Object3D): void {\r\n    const targetPos = new THREE.Vector3().setFromMatrixPosition(target.matrixWorld);\r\n\r\n    const angle = Math.atan2(\r\n        targetPos.x - looker.position.x,\r\n        targetPos.z - looker.position.z\r\n    );\r\n    looker.rotation.set(0, angle, 0);\r\n}\r\n\r\n/**\r\n * three.js switches back to framebuffer 0 after using a render target, which\r\n * causes issues when writing to our WebXR baseLayer's framebuffer. We ensure\r\n * before rendering every object in our scene that we reset our framebuffer\r\n * back to the baseLayer's. This is very hacky by overriding all Object3D's\r\n * onBeforeRender handler.\r\n *\r\n * @param app A reference to the Application.\r\n */\r\nexport function fixFramebuffer(app: Application): void {\r\n    THREE.Object3D.prototype.onBeforeRender = () => {\r\n        app.gl.bindFramebuffer(app.gl.FRAMEBUFFER, app.session.baseLayer.framebuffer);\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport * as DemoUtils from './utils';\r\n\r\n\r\n/**\r\n * Surface reticle.\r\n */\r\nexport default class Reticle extends THREE.Object3D {\r\n    protected ring: THREE.Mesh;\r\n    protected session: XRSession;\r\n    protected camera: THREE.Camera;\r\n    protected raycaster: THREE.Raycaster;\r\n\r\n\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param xrSession WebXR Session.\r\n     * @param camera Camera used to render the scene.\r\n     */\r\n    constructor(xrSession: XRSession, camera: THREE.Camera) {\r\n        super();\r\n\r\n        const geometry = new THREE.RingBufferGeometry(0.1, 0.11, 32, 1);\r\n        // Orient the geometry so its position is flat on a horizontal surface\r\n        geometry.applyMatrix(\r\n            new THREE.Matrix4().makeRotationX(THREE.Math.degToRad(-90))\r\n        );\r\n\r\n        this.ring = new THREE.Mesh(\r\n            geometry,\r\n            new THREE.MeshBasicMaterial({ color: 0xffffff })\r\n        );\r\n\r\n        this.add(this.ring);\r\n\r\n        this.session = xrSession;\r\n        this.visible = false;\r\n        this.camera = camera;\r\n        this.raycaster = new THREE.Raycaster();\r\n    }\r\n\r\n    /**\r\n     * Fires a hit test in the middle of the screen and places the reticle upon\r\n     * the surface if found.\r\n     *\r\n     * @param frameOfRef The frame of reference.\r\n     */\r\n    public async update(frameOfRef: XRCoordinateSystem): Promise<void> {\r\n        this.raycaster.setFromCamera({ x: 0, y: 0 }, this.camera);\r\n        const ray = this.raycaster.ray;\r\n\r\n        const origin = new Float32Array(ray.origin.toArray());\r\n        const direction = new Float32Array(ray.direction.toArray());\r\n        const hits = await this.session.requestHitTest(\r\n            origin, direction, frameOfRef\r\n        );\r\n\r\n        if (hits.length > 0) {\r\n            const hit = hits[0];\r\n            const hitMatrix = new THREE.Matrix4().fromArray(hit.hitMatrix);\r\n\r\n            // Now apply the position from the hitMatrix onto our model:\r\n            this.position.setFromMatrixPosition(hitMatrix);\r\n\r\n            DemoUtils.lookAtOnY(this, this.camera);\r\n\r\n            this.visible = true;\r\n        }\r\n    }\r\n}\r\n","/**\r\n * Should the 3D assets cast shadows?\r\n */\r\nexport const CAST_MODEL_SHADOWS = false;\r\n\r\n/**\r\n * Model asset URL.\r\n */\r\nexport const MODEL_GLTF_URL = 'assets/couch/sofa.gltf';\r\n\r\n/**\r\n * Model name.\r\n */\r\nexport const MODEL_NAME = 'sofa';\r\n\r\n/**\r\n * Model scale factor.\r\n */\r\nexport const MODEL_SCALE = 0.125;\r\n","import * as THREE from 'three';\r\n\r\n\r\n// tslint:disable-next-line:interface-name\r\ninterface TextOptions {\r\n    size?: number;\r\n    fontFace?: 'helvetiker' | 'droid_sans';\r\n    height?: number;\r\n    bold?: boolean;\r\n    color?: number;\r\n}\r\n\r\n/**\r\n * Load a mesh for the given text.\r\n *\r\n * @param message Message to display.\r\n * @param options Text geometry options.\r\n * @return A Promise to be fulfilled with the mesh for the given text.\r\n */\r\nexport function load3DText(message: string, options?: TextOptions): Promise<THREE.Mesh> {\r\n    const fontOptions = {\r\n        size: options.size || 1.0,\r\n        height: options.height || 0.01\r\n    };\r\n    const fontColor = options.color || 0xFFFFFF;\r\n    const fontFace = options.fontFace || 'helvetiker';\r\n    const fontStyle = options.bold ? 'bold' : 'regular';\r\n    const fontURL = `fonts/${fontFace}_${fontStyle}.typeface.json`;\r\n\r\n    const loader = new THREE.FontLoader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        loader.load(fontURL, font => {\r\n            const textObject = new THREE.Mesh(\r\n                new THREE.TextGeometry(message, {\r\n                    ...fontOptions,\r\n                    font,\r\n                }),\r\n                new THREE.MeshBasicMaterial({\r\n                    color: fontColor,\r\n                    transparent: true,\r\n                    opacity: 1.0,\r\n                    side: THREE.DoubleSide\r\n                })\r\n            );\r\n\r\n            resolve(textObject);\r\n        }, null, reject);\r\n    });\r\n}\r\n","import * as THREE from 'three';\r\nimport Reticle from './reticle';\r\nimport * as Settings from './settings';\r\nimport * as TextUtils from './text-utils';\r\nimport * as DemoUtils from './utils';\r\n\r\n\r\n/**\r\n * Sofa colors.\r\n */\r\nenum SofaColor {\r\n    BLACK = 0x111111,\r\n    GREY = 0x333333\r\n};\r\n\r\n/**\r\n * Mapping of UI Buttons to sofa colors.\r\n */\r\nconst COLOR_PICKER_MAPPING = [\r\n    { buttonID: 'color-black', sofaColor: SofaColor.BLACK },\r\n    { buttonID: 'color-grey', sofaColor: SofaColor.GREY }\r\n];\r\n\r\n\r\n/**\r\n * Container class to manage connecting to the WebXR Device API and handle\r\n * rendering on every frame.\r\n */\r\nexport default class Application {\r\n    public gl: WebGLRenderingContext;\r\n    public session: XRSession;\r\n    protected device: XRDevice;\r\n    protected renderer: THREE.WebGLRenderer;\r\n    protected camera: THREE.PerspectiveCamera;\r\n    protected reticle: Reticle;\r\n    protected scene: THREE.Scene;\r\n    protected model: THREE.Group;\r\n    protected frameOfRef: XRFrameOfReference;\r\n    protected stabilized: boolean;\r\n    protected raycaster: THREE.Raycaster;\r\n\r\n    protected textGroup: THREE.Group;\r\n\r\n\r\n    /**\r\n     * Constructor.\r\n     */\r\n    constructor() {\r\n        this.onXRFrame = this.onXRFrame.bind(this);\r\n        this.onEnterAR = this.onEnterAR.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n\r\n        this.revealModel = this.revealModel.bind(this);\r\n        this.loadText = this.loadText.bind(this);\r\n\r\n        this.bindColorPickerListeners = this.bindColorPickerListeners.bind(this);\r\n        this.setSofaColor = this.setSofaColor.bind(this);\r\n\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * Fetches the XRDevice, if available.\r\n     */\r\n    protected async init(): Promise<void> {\r\n        const navigatorInstance = navigator as Navigator;\r\n\r\n        // The entry point of the WebXR Device API is on `navigator.xr`. We also\r\n        // want to ensure that `XRSession` has `requestHitTest`, indicating that\r\n        // the #webxr-hit-test flag is enabled.\r\n        if (navigatorInstance.xr && XRSession.prototype.requestHitTest) {\r\n            try {\r\n                this.device = await navigatorInstance.xr.requestDevice();\r\n            } catch (e) {\r\n                // If there are no valid XRDevice's on the system,\r\n                // `requestDevice()` rejects the promise. Catch our\r\n                // awaited promise and display message indicating there\r\n                // are no valid devices.\r\n                this.onNoXRDevice();\r\n                return;\r\n            }\r\n        } else {\r\n            // If `navigator.xr` or `XRSession.prototype.requestHitTest`\r\n            // does not exist, we must display a message indicating there\r\n            // are no valid devices.\r\n            this.onNoXRDevice();\r\n            return;\r\n        }\r\n\r\n        // We found an XRDevice! Bind a click listener on our \"Enter AR\" button\r\n        // since the spec requires calling `device.requestSession()` within a\r\n        // user gesture.\r\n        document.querySelector('#enter-ar').addEventListener('click', this.onEnterAR);\r\n    }\r\n\r\n    /**\r\n     * Handle a click event on the '#enter-ar' button and attempt to start an\r\n     * XRSession.\r\n     */\r\n    protected async onEnterAR(): Promise<void> {\r\n        // Now that we have an XRDevice, and are responding to a user gesture,\r\n        // we must create an XRPresentationContext on a canvas element.\r\n        const outputCanvas = document.createElement('canvas');\r\n        const ctx = outputCanvas.getContext('xrpresent');\r\n\r\n        try {\r\n            // Request a session for the XRDevice with the XRPresentationContext\r\n            // we just created.\r\n            // Note: `device.requestSession()` must be called in response to a\r\n            // user gesture, hence this function being a click handler.\r\n            const session = await this.device.requestSession({\r\n                outputContext: ctx,\r\n                environmentIntegration: true,\r\n            });\r\n\r\n            // If `requestSession` is successful, add the canvas to the\r\n            // DOM since we know it will now be used.\r\n            document.body.appendChild(outputCanvas);\r\n            this.onSessionStarted(session);\r\n\r\n            // Bind listeners to the color picker buttons:\r\n            this.bindColorPickerListeners();\r\n        } catch (e) {\r\n            // If `requestSession` fails, the canvas is not added, and we\r\n            // call our function for unsupported browsers.\r\n            this.onNoXRDevice();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggle on a class on the page to disable the \"Enter AR\" button and\r\n     * display the unsupported browser message.\r\n     */\r\n    protected onNoXRDevice(): void {\r\n        document.body.classList.add('unsupported');\r\n    }\r\n\r\n    /**\r\n     * Called when the XRSession has begun. Here we set up our three.js\r\n     * renderer, scene, and camera and attach our XRWebGLLayer to the XRSession\r\n     * and kick off the render loop.\r\n     */\r\n    protected async onSessionStarted(session: XRSession): Promise<void> {\r\n        this.session = session;\r\n\r\n        // Add the `ar` class to our body, which will hide our 2D components\r\n        document.body.classList.add('ar');\r\n\r\n        // To help with working with 3D on the web, we'll use three.js. Set up\r\n        // the WebGLRenderer, which handles rendering to our session's base\r\n        // layer.\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            alpha: true,\r\n            preserveDrawingBuffer: true,\r\n        });\r\n        this.renderer.autoClear = false;\r\n\r\n        // We must tell the renderer that it needs to render shadows.\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n        this.gl = this.renderer.getContext();\r\n\r\n        // Ensure that the context we want to write to is compatible with our\r\n        // XRDevice\r\n        await this.gl.setCompatibleXRDevice(this.session.device);\r\n\r\n        // Set our session's baseLayer to an XRWebGLLayer using our new\r\n        // renderer's context\r\n        this.session.baseLayer = new XRWebGLLayer(this.session, this.gl);\r\n\r\n        // A THREE.Scene contains the scene graph for all objects in the render\r\n        // scene. Call our utility which gives us a THREE.Scene with a few\r\n        // lights and surface to render our shadows. Lights need to be\r\n        // configured in order to use shadows, see `shared/utils.js` for more\r\n        // information.\r\n        this.scene = DemoUtils.createLitScene();\r\n\r\n        // Fixes an issue with three.js switching framebuffer back to 0 after\r\n        // using a render target, fixes an issue with shadows.\r\n        DemoUtils.fixFramebuffer(this);\r\n\r\n        // Use the DemoUtils.loadModel to load our OBJ and MTL. The promise\r\n        // resolves to a THREE.Group containing our mesh information. Don't\r\n        // await this promise, as we want to start the rendering process before\r\n        // this finishes.\r\n        Promise.all([\r\n            DemoUtils.loadGLTFModel(Settings.MODEL_GLTF_URL),\r\n            this.loadText()\r\n        ]).then(data => {\r\n            const [ sofa ] = data;\r\n            sofa.scene.name = Settings.MODEL_NAME;\r\n\r\n            // Every model is different -- you may have to adjust the scale of a\r\n            // model depending on the use.\r\n            sofa.scene.scale.set(\r\n                Settings.MODEL_SCALE,\r\n                Settings.MODEL_SCALE,\r\n                Settings.MODEL_SCALE\r\n            );\r\n\r\n            sofa.scene.rotateY(-Math.PI / 2);\r\n\r\n            // Some models contain multiple meshes, so we want to make sure all\r\n            // of our meshes within the model case a shadow.\r\n            if (Settings.CAST_MODEL_SHADOWS) {\r\n                sofa.scene.traverse(node => {\r\n                    if (node instanceof THREE.Mesh) {\r\n                        node.receiveShadow = true;\r\n                        node.castShadow = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.model = new THREE.Group();\r\n            this.model.add(sofa.scene);\r\n        });\r\n\r\n        // We'll update the camera matrices directly from API, so disable matrix\r\n        // auto updates so three.js doesn't attempt to handle the matrices\r\n        // independently.\r\n        this.camera = new THREE.PerspectiveCamera();\r\n        this.camera.matrixAutoUpdate = false;\r\n\r\n        // Add a Reticle object, which will help us find surfaces by drawing a\r\n        // ring shape onto found surfaces. See source code of Reticle in\r\n        // \"utils.ts\" for more details.\r\n        this.reticle = new Reticle(this.session, this.camera);\r\n        this.scene.add(this.reticle);\r\n\r\n        this.frameOfRef = await this.session.requestFrameOfReference('eye-level');\r\n        this.session.requestAnimationFrame(this.onXRFrame);\r\n\r\n        window.addEventListener('click', this.onClick);\r\n    }\r\n\r\n    /**\r\n     * Load and create text geometry.\r\n     */\r\n    protected async loadText() {\r\n        const [ titleText, description ] = await Promise.all([\r\n            TextUtils.load3DText('SØFÄ', { fontFace: 'droid_sans', size: 0.15, bold: true }),\r\n            TextUtils.load3DText('1,200 kr.', { size: 0.10 })\r\n        ]);\r\n\r\n        // Move the description label below the title:\r\n        description.translateX(0.000);\r\n        description.translateY(-0.125);\r\n\r\n        // Adjust position of the description text:\r\n        // description.position.x += 0.125;\r\n        // description.position.y -= 0.7;\r\n\r\n        this.textGroup = new THREE.Group();\r\n        this.textGroup.add(titleText);\r\n        this.textGroup.add(description);\r\n    }\r\n\r\n    /**\r\n     * Called on the XRSession's requestAnimationFrame.\r\n     * Called with the time and XRPresentationFrame.\r\n     */\r\n    protected onXRFrame(time: number, frame: XRFrame): void {\r\n        const session = frame.session;\r\n        const pose = frame.getDevicePose(this.frameOfRef);\r\n\r\n        // Update the reticle's position\r\n        this.reticle.update(this.frameOfRef);\r\n\r\n        // If the reticle has found a hit (is visible) and we have not yet\r\n        // marked our app as stabilized, do so\r\n        if (this.reticle.visible && !this.stabilized) {\r\n            this.stabilized = true;\r\n            document.body.classList.add('stabilized');\r\n        }\r\n\r\n        // Queue up the next frame\r\n        session.requestAnimationFrame(this.onXRFrame);\r\n\r\n        // Bind the framebuffer to our baseLayer's framebuffer\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.session.baseLayer.framebuffer);\r\n\r\n        if (pose) {\r\n            // Our XRFrame has an array of views. In the VR case, we'll have two\r\n            // views, one for each eye. In mobile AR, however, we only have one\r\n            // view.\r\n            for (const view of frame.views) {\r\n                const viewport = session.baseLayer.getViewport(view);\r\n                this.renderer.setSize(viewport.width, viewport.height);\r\n\r\n                // Set the view matrix and projection matrix from XRDevicePose\r\n                // and XRView onto our THREE.Camera.\r\n                this.camera.projectionMatrix.fromArray(view.projectionMatrix);\r\n                const viewMatrix = new THREE.Matrix4().fromArray(pose.getViewMatrix(view));\r\n                this.camera.matrix.getInverse(viewMatrix);\r\n                this.camera.updateMatrixWorld(true);\r\n\r\n                this.renderer.clearDepth();\r\n\r\n                // Render our scene with our THREE.WebGLRenderer\r\n                this.renderer.render(this.scene, this.camera);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method is called when tapping on the page once an XRSession has\r\n     * started. We're going to be firing a ray from the center of the screen,\r\n     * and if a hit is found, use it to place our object at the point of\r\n     * collision.\r\n     */\r\n    protected async onClick(e: MouseEvent) {\r\n        // If our model is not yet loaded, abort:\r\n        if (!this.model && !this.textGroup) {\r\n            return;\r\n        }\r\n\r\n        const buttonElements = COLOR_PICKER_MAPPING\r\n            .map(entry => document.getElementById(entry.buttonID));\r\n        if (buttonElements.includes(e.target as HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        // We're going to be firing a ray from the center of the screen. The\r\n        // requestHitTest function takes an x and y coordinate in Normalized\r\n        // Device Coordinates, where the upper left is (-1, 1) and the bottom\r\n        // right is (1, -1). This makes (0, 0) our center.\r\n        const x = 0;\r\n        const y = 0;\r\n\r\n        // Create a THREE.Raycaster if one doesn't already exist, and use it to\r\n        // generate an origin and direction from our camera (device) using the\r\n        // tap coordinates.\r\n        // Learn more about THREE.Raycaster:\r\n        // https://threejs.org/docs/#api/core/Raycaster\r\n        this.raycaster = this.raycaster || new THREE.Raycaster();\r\n        this.raycaster.setFromCamera({ x, y }, this.camera);\r\n        const ray = this.raycaster.ray;\r\n\r\n        // Fire the hit test to see if our ray collides with a real surface.\r\n        // Note that we must turn our THREE.Vector3 origin and direction into an\r\n        // array of x, y, and z values. The proposal for\r\n        // `XRSession.prototype.requestHitTest` can be found here:\r\n        // https://github.com/immersive-web/hit-test\r\n        const origin = new Float32Array(ray.origin.toArray());\r\n        const direction = new Float32Array(ray.direction.toArray());\r\n        const hits = await this.session.requestHitTest(\r\n            origin, direction, this.frameOfRef\r\n        );\r\n\r\n        // If we found at least one hit...\r\n        if (hits.length > 0) {\r\n            document.body.classList.add('placed');\r\n\r\n            // We can have multiple collisions per hit test. Let's just take the\r\n            // first hit, the nearest, for now.\r\n            const hit = hits[0];\r\n\r\n            // Our XRHitResult object has one property, `hitMatrix`, a\r\n            // Float32Array(16) representing a 4x4 Matrix encoding position\r\n            // where the ray hit an object, and the orientation has a Y-axis\r\n            // that corresponds with the normal of the object at that location.\r\n            // Turn this matrix into a THREE.Matrix4().\r\n            const hitMatrix = new THREE.Matrix4().fromArray(hit.hitMatrix);\r\n\r\n            // Now apply the position from the hitMatrix onto our model.\r\n            this.model.position.setFromMatrixPosition(hitMatrix);\r\n            this.model.translateY(-0.75);\r\n\r\n            this.textGroup.position.setFromMatrixPosition(hitMatrix);\r\n            this.textGroup.translateX(1.4);\r\n            this.textGroup.translateY(0.4);\r\n            // this.reticle.visible = false;\r\n\r\n            // Rather than using the rotation encoded by the `modelMatrix`,\r\n            // rotate the model to face the camera. Use this utility to rotate\r\n            // the model only on the Y axis.\r\n            DemoUtils.lookAtOnY(this.model, this.camera);\r\n\r\n            // Now that we've found a collision from the hit test, let's use the\r\n            // Y position of that hit and assume that's the floor. We created a\r\n            // mesh in `DemoUtils.createLitScene()` that receives shadows, so\r\n            // set it's Y position to that of the hit matrix so that shadows\r\n            // appear to be cast on the ground under the model.\r\n            const shadowMesh = this.scene.children.find(c => c.name === 'shadowMesh');\r\n            shadowMesh.position.y = this.model.position.y;\r\n\r\n            // Ensure our model has been added to the scene.\r\n            this.scene.add(this.model);\r\n\r\n            // Set the initial sofa color to grey:\r\n            this.setSofaColor(SofaColor.GREY);\r\n\r\n            this.scene.add(this.textGroup);\r\n\r\n            // this.revealModel();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reveal the assets by having them move up from the floor.\r\n     */\r\n    protected revealModel(): void {\r\n        let allTweensCompleted = false;\r\n        const checkAllTweensCompleted = () => {\r\n            allTweensCompleted = assetTweenCompleted && textTweenCompleted;\r\n        };\r\n\r\n        // Asset tween:\r\n        let assetDeltaY = 0.0;\r\n        const initialAssetPosition = { y: 0.0 };\r\n        let assetTweenCompleted = false;\r\n        const assetTween = new TWEEN.Tween(initialAssetPosition)\r\n            .to({ y: 0.5 }, 2.5 * 1000)\r\n            .onUpdate(() => {\r\n                assetDeltaY = initialAssetPosition.y - assetDeltaY;\r\n                this.model.translateY(assetDeltaY);\r\n                assetDeltaY = initialAssetPosition.y;\r\n            })\r\n            .onComplete(() => {\r\n                assetTweenCompleted = true;\r\n                checkAllTweensCompleted();\r\n            })\r\n            .start();\r\n\r\n        // Text tween:\r\n        let textDeltaY = 0.0;\r\n        const initialTextPosition = { y: 0.0 };\r\n        let textTweenCompleted = false;\r\n        const textTween = new TWEEN.Tween(initialTextPosition)\r\n            .to({ y: 1.0 }, 2 * 1000)\r\n            .delay(500)\r\n            .onUpdate(() => {\r\n                textDeltaY = initialTextPosition.y - textDeltaY;\r\n                this.textGroup.translateY(textDeltaY);\r\n                textDeltaY = initialTextPosition.y;\r\n            })\r\n            .onComplete(() => {\r\n                textTweenCompleted = true;\r\n                checkAllTweensCompleted();\r\n            })\r\n            .start();\r\n\r\n        const animate = (time: number) => {\r\n            if (!allTweensCompleted) {\r\n                this.session.requestAnimationFrame(animate);\r\n                TWEEN.update(time);\r\n            }\r\n        };\r\n\r\n        this.session.requestAnimationFrame(animate);\r\n    }\r\n\r\n    /**\r\n     * Bind click listeners to the UI buttons tasked with toggling the sofa's\r\n     * color.\r\n     */\r\n    protected bindColorPickerListeners() {\r\n        for (const colorPickerMap of COLOR_PICKER_MAPPING) {\r\n            const { buttonID, sofaColor } = colorPickerMap;\r\n\r\n            document.getElementById(buttonID).addEventListener('click', e => {\r\n                e.preventDefault();\r\n                this.setSofaColor(sofaColor);\r\n\r\n                document.querySelector('#color-picker a.selected')\r\n                    .classList.remove('selected');\r\n                const button = e.target as HTMLElement;\r\n                button.classList.add('selected');\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the sofa's color.\r\n     *\r\n     * @param color The color of the sofa model.\r\n     */\r\n    protected setSofaColor(color: SofaColor) {\r\n        const sofa = this.scene.getObjectByName(Settings.MODEL_NAME)\r\n        if (sofa !== undefined) {\r\n            // The first material is the sofa's fabric color, the second one is\r\n            // the sofa's feet color. Here we only care about changing the color\r\n            // of the fabric:\r\n            let materialIterator = 0;\r\n\r\n            sofa.traverse(node => {\r\n                if (node instanceof THREE.Mesh\r\n                        && node.material instanceof THREE.MeshStandardMaterial\r\n                        && materialIterator++ === 0) {\r\n                    node.material.color = new THREE.Color(color);\r\n                    node.material.needsUpdate = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import Application from './application';\r\n\r\n\r\n/**\r\n * Install the WebXR Polyfill and Shim to support discrepancies between browser\r\n * and device vendors.\r\n */\r\nif (window.WebXRPolyfill) {\r\n    const polyfill = new WebXRPolyfill();\r\n\r\n    if (window.WebXRVersionShim) {\r\n        const versionShim = new WebXRVersionShim();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Launch the Application.\r\n */\r\nconst app = new Application();\r\n\r\n/**\r\n * Install Service Worker.\r\n */\r\nif ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', async () => {\r\n        try {\r\n            const navigatorInstance = navigator as Navigator;\r\n            const registration = await navigatorInstance.serviceWorker.register('service-worker.js');\r\n            console.log('ServiceWorker registration successful with scope:', registration.scope);\r\n        } catch (ex) {\r\n            console.log('ServiceWorker registration failed:', ex);\r\n        }\r\n    });\r\n}\r\n"],"names":["THREE.Scene","THREE.AmbientLight","THREE.DirectionalLight","THREE.PlaneGeometry","THREE.Mesh","THREE.ShadowMaterial","THREE.Vector3","THREE.Object3D","THREE.RingBufferGeometry","THREE.Matrix4","THREE.Math","THREE.MeshBasicMaterial","THREE.Raycaster","DemoUtils.lookAtOnY","THREE.FontLoader","THREE.TextGeometry","THREE.DoubleSide","THREE.WebGLRenderer","THREE.PCFSoftShadowMap","DemoUtils.createLitScene","DemoUtils.fixFramebuffer","DemoUtils.loadGLTFModel","Settings.MODEL_GLTF_URL","Settings.MODEL_NAME","Settings.MODEL_SCALE","THREE.Group","THREE.PerspectiveCamera","TextUtils.load3DText","THREE.MeshStandardMaterial","THREE.Color"],"mappings":"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"}